{
  "id": "http://arxiv.org/abs/1006.2835v1",
  "title": "Fuzzy Modeling and Natural Language Processing for Panini's Sanskrit Grammar",
  "authors": [
    "P. Venkata Subba Reddy"
  ],
  "abstract": "Indian languages have long history in World Natural languages. Panini was the\nfirst to define Grammar for Sanskrit language with about 4000 rules in fifth\ncentury. These rules contain uncertainty information. It is not possible to\nComputer processing of Sanskrit language with uncertain information. In this\npaper, fuzzy logic and fuzzy reasoning are proposed to deal to eliminate\nuncertain information for reasoning with Sanskrit grammar. The Sanskrit\nlanguage processing is also discussed in this paper.",
  "text": "JOURNAL OF COMPUTER SCIENCE AND ENGINEERING, VOLUME 1, ISSUE 1, MAY 2010 \n99  \n \n \nFuzzy Modeling and Natural Language \nProcessing for Panini’s Sanskrit Grammar \nP. Venkata Subba Reddy \n \nAbstract—Indian languages have long history in World Natural languages. Panini was the first to define Grammar for San-\nskrit language with about 4000 rules in fifth century. These rules contain uncertainty information. It is not possible to Comput-\ner processing of Sanskrit language with uncertain information.  In this paper, fuzzy logic and fuzzy reasoning are proposed to \ndeal to eliminate uncertain information for reasoning with Sanskrit grammar. The Sanskrit language processing is also dis-\ncussed in this paper. \n. \nIndex Terms— Fuzzy logic, Fuzzy reasoning, Natural language processing, Panini’s Sanskrit grammar  \n——————————      —————————— \n1 INTRODUCTION\nComputer languages are defined based on particular \ngrammar, for example C, Pascal etc. Computer processing \nof natural languages has become an application area such \nas natural language processing, Machine translation \netc.Natural languages are to be defined with the gram-\nmer.  \nPanini defined Sanskrit grammar with 4000 rules \nlong back in sixth century B.C. [4]. The rules of Panini’s \nSanskrit \ngrammar \ncontain \nuncertainty. \nComputer \nprocessing of this grammar is very difficult unless uncer-\ntainty is eliminated. There are many logics available to \ndeal with uncertainty like fuzzy logic, probabilistic logic \netc.  \nFuzzy logic and reasoning [7, 8, 13, 14] are discussed \nto deal with uncertainty in the rules of Panini’s Sanskrit \ngrammar. The Paninian approach to Natural Language \nProcessing (NLP) is reviewed and compared with the \ncurrent computer-based understanding systems [6, 12, \n15]. The Paninian-style generative rules and meta-rules \ncould assist in further advances in NLP. \n \n2    FUZZY LOGIC \n \nZadeh[9] proposed Fuzzy logic to deal with Uncertain \nand Incomplete information. Here we discuss Fuzzy logic \nbriefly and later we apply it for Panini’s Sanskrit Gram-\nmar [2,3]. \n \nZadeh[9]  has introduced Fuzzy set as a model to \ndeal  with imprecise, inconsistent and inexact informa-\ntion. Fuzzy set is a class of objects with a continuum of \ngrade of membership.   \n \nThe Fuzzy set A of X is characterized by its         \nmembership function A = µA(x ) and ranging  values in        \nthe unit interval  [0, 1] \n \nµA(x ): X [0, 1], x Є X,  where X is Universe of discourse.         \nor \nA  = µA(x 1)/x1  +  µA(x 2)/x2  + … +   µA(x n)/xn   \nWhere “+” is union \nFor instance, x is Tall is defined as \n \nTall = µTall(x) [0, 1], where “Tall” is fuzzy set. \n \nTall = 0.56/x1 + 0.6/x2 + 0.65/x3 + 0.67/x4 + 0.69/x5 \n \nThe combination of Fuzzy sets are given as follows \n \n \nAΛB = min {µA(x), µB(x)}/x (disjunction) \nAVB   = max {µA(x), µB(x)}/x (conjunction) \n  A’     = 1 - µA(x)/x (negation) \nA  B= max {1 - µA(x), µB(x)}/x (implication) \nµA(x, y)= {µA(x) X  µB(y)}/x,y = min{µA(x) X  µB(y)}/x,y \nA o R = max {µA(x), µA(x, y)}/x  where R(x, y) is Fuzzy \nrelation and “o” is composition \n \nThe propositions may contain quantifiers. Square opera-\ntor is used for ‘very’, ‘most’ (concentration). The square \nroot operator is used for ‘more or less’ (diffusion). \n \nFor instance, \n \nµvery young(x)  = µyoung(x)2 \nµnotvery young(x)  = 1-µyoung(x)2 \nµmore or less young(x) = µyoung(x)1/2 \n \n           Fuzzy reasoning[8] is a drawing conclusion from \nFuzzy propositions using fuzzy inference rules. Some of \nthe Fuzzy inference rules are given bellow  \n \nR1:    x is A                               R2: x is A                                    \n         x and y are B                   x or y is B                               \n         _____________                ____________ \n          y is AΛB                            y is AVB \n \n \nR3:  x and y are A                   R4: x or y are A    \n        y and z are B                      y or z are  B   \n       ______________ \n      ____________ \n        y and z are B                     x or z are B \n100 \n \n \n \n  \n        \n        R5:  x is A \n        if x is A then y is B \n        _______________ \n        y is A o (AB) \n \n \n3 \nFUZZY \nMODELLING \nFOR \nPANINI’S \nSANSKRIT GRAMMAR \n \nGrammars are defined to either programming \nlanguages or natural languages. Computer processing of \nnatural languages and language translations is an appli-\ncation area in the computer field. Indian languages are \nhaving long history. Panini proposed grammar with 4000 \nrules for Sanskrit. These are categorized into different \nsets. One of them is Syadvada set. The Syadvada set con-\ntains seven possibilities they are given below. \n \n1. May be, it is. (Syadasti) \n2. May be, it is not (Sada nasti) \n3. May be it is, and it is not at different times (Syad asti-          \nnasti) \n4. May be it is and it is not at the same time and is inde-\nscribable (Syad avaktavya) \n5. May be it is, and yet indescribable (Syad asti avak-\ntavya) \n6. May be it is not, and also indescribable (Syad asti nasti \navaktavya) \n7. May be it is, and it is not and also indescribable ( Syad \nasti nasti avaktavya) \n \nThe above rules  contain uncertainty. The uncertainty \nhas to be eliminated for further computer processing of \nthe Sanskrit language. Fuzzy logic can be used to elimi-\nnate the uncertainty. The fuzzy logic is applied for the \nabove rules to eliminate uncertainty and the rules are giv-\nen below. \n \n1. \nMay be, it is. ( Syadasti) \nµSyadasti(x) → [0,1] \n \n2. \nMay be, it is not (Syad nasti) \nSyad nasti = 1 - µSyadasti(x) \n3. \nMay be it is, and it is not at different times (Syad \nasti-nasti) \n \nµSyadasti(x) Λ (1 - µSyadasti(x) o µdifferent times (x,y)) \nwhere “o” is composition and “y” is time varia-\nble \n \n4. \nMay be it is and it is not at the same time and is \nindescribable \n \n(µSyadasti(x) Λ (1 - µSyadasti(x) o µdifferent times (x,t)) Λ \nµdifferent times (x)  \nwhere “t” is constant. \n5. \nMay be it is and yet indescribable. (Syad asti \navaktavya) \n \nµSyadasti(x) Λ µdifferent times (x)1/2 \nwhere yet is diffusion \n \n6. \nMay be it is not, and also indescribable (yad asti \nnasti avaktavya) \n(1- µSyadasti(x)) Λ µdifferent times (x) \n  \n      7.   May be it is, and it is not and also indescribable \n(Syad asti nasti avaktavya) \n \nµSyadasti(x) Λ (1- µSyadasti(x) Λ µdifferent times (x)) \n \nThis fuzzy represention of the sanskrit sentences shall be \nfurther used for fuzzy reasoning [7, 13, 14,  16]. \nFor istance, consider two sentences \n \nMay be, it is. (Syadasti) \nMay be it is, and it is not at different times (Syad asti-\nnasti) \n \nThe inference will be given as using R1 \n \n“it is not at different times “ with the fuzziness   \n(Syadasti) Λ  (Syad asti-nasti) \n \n4  SANSKRIT LANGUAGE PROCESSING  \n \nBeattie[1]  presents an introductory review of \nsome aspects of the computer processing of natural lan-\nguage  in the form of a string of alphabetic characters, for \nexample, spoken word. Applications of such processing \nin fields like information storage and retrieval and com-\nputer-assisted instruction are discussed for a computer to \n“understand” natural language[3].  \n \nThe Sanskrit Language can be processed by de-\nfining English alphabetic characters using OM SETUP. \nThis Sanskrit language representation in English shall be \nused for reasoning with the Sankrit language \n \nZenon [16] describes a new programming lan-\nguage FLISP which provides a number of facilities for \nefficiently representing and manipulating fuzzy know-\nledge. It is based on fuzzy sets and fuzzy logic theories. \nThe language contains a collection of fuzzy-set operations \nand procedures for solution of fuzzy relational equations \nwith triangular norms. FLISP forms implement and ex-\namine the fuzzy control algorithms. FLISP may be used to \ndeal with Uncertainty in Panini’s Sanskrit Grammer.  \n \nPROLOG can also be used for reasoning with the \nSanskrit language. \n \n5 COCLUSION \n \n \n101 \n \nPanini’s proposed Sanskrit Grammar to Sanskrit \nlanguage. The rules  contain  uncertainty information. \nThe elimination of uncertainty information with Fuzzy \nlogic is discussed. Fuzzy logic and fuzzy reasoning are \ndiscussed to deal with uncertainty information in Panini’s \nSanskrit Grammar to make it convenient for further com-\nputer processing. The Computer processing of Sanskrit \nlanguage is discussed. \n \nAKNOWLEDGEMENT \n  \nOur special thanks to Prof. V.V.S.Sarma, Com-\nputer Science and Automation, Indian Institute of Science, \nBangalore for discussion, and reviewers for their valuable \nsuggestions. \n \nREFERENCES \n \n \n[1] \nJ.D. Beattie, Natural language processing by comput-\ner,International Journal of Man-Machine Studies, Volume \n1, Issue 3, Pages 311-329, July 1969. \n[2] \nS. Herath, S. Ishizaki, Y. Anzai, H. Aiso, T. Ikeda , Machine \nprocessing of a natural language with interchangeable \nphrases, Information Sciences, Volume 66, Issues 1-2, \nPages 139-165, December 1992. \n[3] \nJames Pustejovsky, Branimir Boguraev, Lexical knowledge \nrepresentation and natural language processing, Artificial \nIntelligence, Volume 63, Issues 1-2, Pages 193-223, Octo-\nber 1993. \n[4] \nSarma, V.V.S., “A survey of Indian Logic from the point of \nview of Computer Science”, Sadhana –Academy Proceed-\nings in Engineering Sciences, 19,6,971-983, 1994. \n[5] \nSarma, V.V.S., “Computers,Sanskrit and Indian Sanskrit \nTraditions”, Presentation at the Seminar at Kakatiya Uni-\nversity on 25 September 2000. \n[6] \nSubhash C. Kak  The Paninian approach to natural langu-\nageprocessing, International Journal of Approximate Rea-\nsoning, Volume 1, Issue 1, Pages 117-130, January 1987. \n[7] \nVenkataa Reddy, P. and Syam Babu, M., “Some methods \nof reasoning for fuzzy conditional propositions”, Fuzzy Sets \nand Systems, 52,229-250, 1992. \n[8] \nL. A Zadeh, “Calculus of Fuzzy Restrictions”, In Fuzzy \nSets and their Applications to Cognitive and Decision \nProcesses, L. A. Zadeh, King-Sun FU, Kokichi Tanaka \nand Masamich Shimura (Eds.), Academic Press, New \nYork, 1-40,  1975. \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n[9] \nZadeh, L.A., “Fuzzy Sets”, Information Control, 8, 338-353, \n1965. \n[10] \nL.A. Zadeh, Fuzzy sets and information granularity, Ad-\nvances in Fuzzy Set Theory and Applications, M. Gupta, R. \nRagade and R. Yager (eds.), 3-18. Amsterdam: North-\nHolland Publishing Co., 1979. \n[11] \nL.A. Zadeh, A theory of approximate reasoning, Machine \nIntelligence 9, J. Hayes, D. Michie, and L.I. Mikulich (eds.), \n149-194. New York: Halstead Press, 1979. \n[12] \nL.A. Zadeh, Test-score semantics for natural languages \nand meaning representation via PRUF, Empirical Seman-\ntics, B. Rieger (ed,), 281-349. Bochum, W. Germany: \nBrockmeyer, 1982. Also Technical Memorandum 246, AI \nCenter, SRI International, Menlo Park, CA., 1981. \n[13] \nL.A. Zadeh, Toward a theory of fuzzy information granula-\ntion and its centrality in human reasoning and fuzzy logic, \nFuzzy Sets and Systems 90, 111-127, 1997. \n[14] \nL.A. Zadeh, Some reflections on soft computing, granular \ncomputing and their roles in the conception, design and uti-\nlization of information/intelligent systems, Soft Computing \n2, 23-25, 1998. \n[15] \nL.A. Zadeh, Precisiated Natural Language (PNL), AI Mag-\nazine, Vol. 25, No. 3, 74-91, 2004. \n[16] \nZenon A. Sosnowski ,FLISP — A language for processing \nfuzzydata,Fuzzy Sets and Systems, Volume 37, Issue 1, \nPages 23-32, August 1990.  \n \n \nP. Venkata Subba Reddy is  working as Associate Professor in \nDepartment of Computer science and Engineering, College \nof Engineering, Sri Venkateswara University, Tirpathi, India \nsince 2001. He joined as Asst. Professor in Department of \nComputer science and Engineering, College of Engineering, \nSri Venkateswara University in 1992 and promoted as Asso-\nciate Professor in 2001. He did Post Graduate degree in \nApplied Mathematics with  Computer Programming as Spe-\ncilization during 1984-86. He did his Post Graduation Diplo-\nma in Computer Methods & Programming from Computer \nSociety of India, Hyderabad. He did   M.Phii in Database \nManagement systems  during 1986-88 and Ph.D in Artificial \nIntelligence  during 1988-1992 in Sri Venkateswara Univer-\nsity, Tirpathi, India. . He did Post Doctoral/Visiting fellow-\nship in Fuzzy Algorithms from IISC/JNCAR, Bangalore, India \nunder Prof. V. Rajaraman in 1996. He is actively engaged in \nTeaching and Research work to B.Tech., M.Tech., and Ph.D \nstudents.  He  published papers in reputed   journals. He is \nan Editor for JCSE. \n \n \n",
  "categories": [
    "cs.CL"
  ],
  "published": "2010-06-14",
  "updated": "2010-06-14"
}