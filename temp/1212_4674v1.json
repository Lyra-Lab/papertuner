{
  "id": "http://arxiv.org/abs/1212.4674v1",
  "title": "Natural Language Understanding Based on Semantic Relations between Sentences",
  "authors": [
    "Hyeok Kong"
  ],
  "abstract": "In this paper, we define event expression over sentences of natural language\nand semantic relations between events. Based on this definition, we formally\nconsider text understanding process having events as basic unit.",
  "text": "Natural Language Understanding Based on Semantic \nRelations between Sentences \n \nHyeok Kong \nFaculty of mathematics, Kim Il Sung University, D.P.R.K \n \n \nAbstract: In this paper, we define event expression over sentences of \nnatural language and semantic relations between events. Based on this \ndefinition, we formally consider text understanding process having events \nas basic unit.  \n \nKey words: text understanding, event expression, semantic relation, event \nschema, understanding diagram. \n \n1. Event and Semantic Relation \n \nWe introduce semantic representation model of sentences for text \nunderstanding, which is based on event expression by considering a \nsentence as a description of event. We first give event expression \nconsisting of certain items which is called case-relations, where event \nexpression represents the meaning of a sentence. \nFormally, an event corresponding to a sentence S can be represented as \nfollows:  \n)\n,\n,\n( 1\nne\ne\nevent\n\n or \n)\n(s\nevent\n \n \nIn some cases, we simply write event as e  and omit event. Let \n)\n,\n,1\n(\nn\ni\nei\n\n\n be a tuple \n))\n(\n,\n(\ni\ni\nA\nv\nA\n or \n)\n,\n(\niT\nAi\n. Here, \niA  is a \ncase-relation shown in Table 1 and \n)\n(\niA\nv\nis a value of case-relation \niA  \nwhich takes a Korean word or a variable. We call a case-relation taking a \nvariable case-relation with undefined value.  \niT  is an event  expression which is the value of case-relation \niA . \nThis reflects the internal nesting of natural language sentences and \ncorresponds to subordinate clause of principal clause of a sentence. We \nintroduced 14 case-relations in domain of our text understanding \nsystem(Table 1). \nThere exists semantic relation between sentences of a text. Naturally, \nthere exists semantic relation between events corresponding to these \nsentences.     \n     Table 1．The meaning of case-relation \ncase-relation \nmeaning \nactor \naction \nverb2 \nisa \ntime \nloc \nway \nobj \nsource \nto \ndet \nmod \nnumber \nno \nActor of event \nAction of event \nDescription of state or location of event \nJudgment predicate \nTime of action \nLocation of action \nWay of action \nObject of action \nSource of action \nGoal of action \nDetermination of person or object \nMode of action \nNumber of objects \nNegation of description , action and judgment \n  \nWe propose 7 semantic relations of language domain which can be \nmanaged in our model.  \n①. We say that event A  has inheritance relation with event B  if \nB  is a special case of A. We denote it \nB\nA\ninherit\n\n\n\n. \n②. We say that event A  has accompany relation with event B  if \nthe occurrence of event A  is equal to the occurrence of event B . We \ndenote it \nB\nA\naccompany\n\n\n\n\n\n. \n③. We say that event A  has subprocess relation with event B  if \nB  is a subevent of A  and B  occurs in some time segment of A . We \ndenote it \nB\nA\npart\n\n\n\n. \n④. We say that event A  has precondition relation with event B  if \nevent B  occurs before A  occurs. We denote it \nB\nA\npre\n\n\n\n. \n⑤. We say that B  has goal relation with event A  if the occurrence \nof A  is a motive of event B . We denote it \nB\nA\ngoal\n\n\n\n. \n⑥. We say that A  has relation of cause or consequence with event \nB  if the occurrence of B  is a cause or consequence of A . We denote it \nB\nA\ncause\n\n\n\n or \nB\nA\ncons\n\n\n\n. \n⑦. We say that event A  has sequential relation with event B  if the \nevent which can occur after event A  occurs is always event B . We \ndenote it \nB\nA\nsequel\n\n\n\n. \n \n2．Memory schema \n \nLet \nn\nS\nS\nS\n,\n,\n,\n2\n1\n\n be n  sentences of a text and \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n events \ncorresponding to it. We suppose that subsequence of events \nnl\nn\nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n \n)\n1(\nn\nl \n\n of \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n occurs consequently and \ndenote it by  \n \nnl\nsequel\nsequel\nn\nsequel\nn\nE\nE\nE\n\n\n\n\n\n\n\n\n\n\n2\n1\n (*) \n \nIn our model, understanding of text is a process confirming the \nsemantic relations in (*). This process is performed by matching l  \nevents and its relevant events to a story schema, which is defined in our \nmodel. We consider this course as a process for text understanding   \n \nDefinition 1. Let E , E  be two events. We say that E  matches E  if \nevery case-relations and values of E  are equal to ones of E . We call \nthat E  is event schema and E  matchable event. \n \nRemark: An event can match another event or can be matched by another \nevent.   \n   \nThrough the matching, the value of case-relation with undefined value \nin E  is unified by one in E . We call such a unifying process \nconfirmation process of case-relation with undefined value.  \n \nDefinition 2. We call the following relational diagram memory schema \nand denote by \n)\n,\n,\n(\n2\n1\nn\nE\nE\nE\nMP\n\n or \nMP. \n \n \n \nFigure 1．Structure of memory schema \n \nHere, \n)\n,\n,1\n(\nn\ni\nTi\n\n\n is a tree having \ni\nE  as its root. Each node of \nthis tree is an event schema or an event. For two neighboring nodes there \nis a edge with label r  denoting semantic relation between them. In \naddition to r , it is possible to add test factor “$”to edge. \n1\nE  is called a \nroot of memory schema \n)\n,\n,\n(\n2\n1\nn\nE\nE\nE\nMP\n\n. \nNow, let E~  be a set of events. Memory mapping Memory is defined \nas follows: \nMemory: \n}\n,\n{\n~\nFalse\nTrue\nE \n  \nWe say that E  is understandable in memory if \nTrue\nE\nMemory\n\n)\n(\n \nfor  \nE\nE\n~\n\n\n. So called “understandable in memory” means that our \nunderstanding model senses occurrence (or existence) of this event. We \nsuppose that Memory satisfies the following 3 conditions:  \n \n①. \n2\n1, E\nE\n: two event schemas in memory schema MP.  \nIf \n2\n,$\n1\nE\nE\npre\n\n\n holds and there exist two event \n2\n1, E\nE\n which are \nmatched by \n1\nE and \n2\nE  and \nTrue\nE\nMemory\n\n)\n(\n2\n, then relational diagram  \n2\n1\nE\nE\npre\n\n\n\n holds.  \n②. Let us assume that there exists a following relational diagram in \nmemory schema MP. \n     \n \n \nIf events \n13\n12\n2\n1\n,\n,\n,\n,\n,\nE\nE\nE\nE\nE\nm\n\n are matched by \n,\n,\n,\n,\n2\n1\nm\nE\nE\nE\n\n \n13\n12,E\nE\n \n ,     \nTrue\nE\nMemory\nm\nE\nMemory\nE\nMemory\nE\nMemory\n\n\n\n\n\n)\n13\n(\n)\n(\n)\n2\n(\n)\n1\n(\n\n \nand \n13\n)\n(\nE\nE\nFs\nm \n, then \nTrue\nE\nMemory\n\n)\n(\n12\n and the following relational \ndiagram holds.   \n \n \n③. Let \n2\n1, E\nE\n be two event schemas in memory schema MP  and \n2\n1\nE\nE\nr\n\n. Let \n2\n1, E\nE\n be events being matched by \n1\nE ,\n2\nE  respectively. \nIf \nTrue\nE\nMemory\n\n)\n(\n1\n, then \nTrue\nE\nMemory\n\n)\n(\n2\n and relational diagram \n2\n1\nE\nE\nr\n\n holds. \n \nDefinition 3. Let \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n be n events. If \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n satisfies \nthe following 5 conditions, we call sequence of events constituting of n \nevents is matched by memory schema \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n. \n(1) Each event schema in subsequence \n)\n1(\n,\n,\n,\n2\n1\nk\nl\nE\nE\nE\nkl\nk\nk\n\n\n\n of \nsequence of events \nk\nE\nE\nE\n,\n,\n,\n2\n1\n\n in \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n matches \nl  \nevents \nin \nsubsequence \nnl\nn\nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n of \nsequence \nof \nevents \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n one by one. \n(2) Let \n}\n,1\n|\n{\n)\n,\n,\n2\n,1\n(\nl\ni\nni\nE\nn\nE\nE\nE\nQ\n\n\n\n\n\n be a quotient set of \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n where \n\n\nni\nE\n is a set of events between \n)1\n( \ni\nn\nE\n and \n)1\n( \ni\nn\nE\n and includes\nni\nE\n. That is \n\n\nni\nE\n is a set of events of \n)1\n( \ni\nn\nE\n，…，\nni\nE ，…，\n)1\n( \ni\nn\nE\n excepting \n)1\n( \ni\nn\nE\n and \n)1\n( \ni\nn\nE\n.  \nFor \nl\ni\n,\n,2,1\n\n\n, each event of \n\n\nni\nE\n is matched by event schema of \ntree \niT  in memory schema \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n. All remained event \nschemas unmatched in \niT  can be event schemas including same variable. \nWe can confirm its values through confirmation process of case-relation \nwith the same variable.  \n(3) If set \n}\n,\n,\n,\n{\n\\\n}\n,\n,\n,\n{\n2\n1\n2\n1\nkl\nk\nk\nk\nE\nE\nE\nE\nE\nE\nA\n\n\n\n is not empty, event \nschemas of this set are event schemas including the same variable,  We \ncan confirm its values through confirmation process of case-relation with \nthe same variable. \n(4) If \n}\n,\n,\n,\n{\n2\n1\nk\nx\nE\nE\nE\nE\n\n\n is \nmatched \nby \nroot \n \n1\nE\n of \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n, \nTrue\nE\nMemory\nx \n)\n(\n holds. \n(5)  Let \n2\n1,\ni\ni\nE\nE\n be two event schemas of tree \niT\n in \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n and we suppose that \n2\n,$\n1\ni\nr\ni\nE\nE\n\n\n, \n2\n1,\ni\ni\nE\nE\n can be \nconfirmed through confirmation process of the same variable. And let \n\n\nni\ni\ni\nE\nE\nE\n2\n1,\n be matched by \n2\n1,\ni\ni\nE\nE\n respectively. \n If r =”pre”, then \nTrue\nE\nMemory\ni\n\n)\n(\n2\n and if r = ”goal”, then there \nexists \nthe \nfollowing \nrelational \ndiagram \nin \nmemory \nschema \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n. \n \n \nAnd \n3\n)\n(\ni\nim\nE\nE\nFS\n\n holds. \n \nDefinition 4. Let  \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n)1\n( \nn\n be sequence of events. We call \nthat \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n is understandable in memory if \nTrue\nE\nMemory\ni \n)\n(\n for \nall \n)\n,1\n(\nn\ni\ni\n\n and \nsubsequence \n)\n1(\n,\n,\n,\n2\n1\nn\nl\nE\nE\nE\nnl\nn\nn\n\n\n\n of \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n satisfies the following relational diagram. \nnl\nsequel\nsequel\nn\nsequel\nn\nE\nE\nE\n\n\n\n\n\n\n\n\n\n\n2\n1\n \nHere, l  is not greater than n and must be close to n as much as \npossible.  \n \nTheorem 1. Let \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n \n)1\n( \nn\n be sequence of events and MP  \nmemory \nschema \nmatching \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n)1\n( \nn\n. \nAnd \nlet \n}\n,\n,\n,\n{\n2\n1\nn\nx\nE\nE\nE\nE\n\n\n be event being matched by \nx\nE  which is a root of \nMP . Then, \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n is understandable in memory if \nx\nE\n is \nunderstandable in memory  \n \nNow, let \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n be a sequence consisting of n  events \ncorresponding to text P  and \nm\nMP\nMP\nMP\n,\n,\n,\n2\n1\n\n m  memory schemas \ndividing \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n into m  parts \nm\nEP\nEP\nEP\n,\n,\n2\n,1\n\n. That is, \ni\nMP  \nmatches \n)\n,\n;\n,\n,2,1\n;\n,\n,\n(\n1\n0\n)1\n(\nn\nnm\nn\nni\ni\nn\ni\ni\nE\nE\nE\nE\nm\ni\nE\nE\nEP\nEP\n\n\n\n\n\n\n\n. And let \nroot \nxi\nE  of some tree in \ni\nMP  and root \n)\n1\n( \ni\ny\nE\n of some tree in  \n1\n\ni\nMP\n \nsatisfy relational diagram \n)1\n( \n\n\n\ni\ny\nsequel\nxi\nE\nE\n. If \n1\nx\nE  is an event matched \nby root of \n1\nMP  corresponding to \n1\nEP  and is understandable in memory, \nthen sequence of events \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n is understandable in memory. \n \n3．Story and understanding diagram in memory \n \nGenerally, story consists of a series of consequent events and some other \nevents relating to it. To make system understand such a story, we defined \nmemory schema in this paper. That is, a memory schema is a kind of data \nstructure base on this idea. Now, let \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n be sequence of \nevents and \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\nbe memory schema matching this sequence. \nBased on the condition (1)~(3) which is given in the definition of \nmatching of memory schema, understanding system can deal with the \nfollowing cases.  \n① There exists \nx\nE ,\n}\n,\n,\n,\n{\n2\n1\nn\nx\nE\nE\nE\nE\n\n\n which is matched by \nx\nE . In \nthis case \nx\nE  of \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n is replaced with \nx\nE . \n② There exists \nx\nE ,\n}\n,\n,\n,\n{\n2\n1\nn\nx\nE\nE\nE\nE\n\n\n which is matched by \nx\nE .  \nHere, \nx\nE  is an event schema with the same variable and \nx\nE  is \nconfirmed through confirmation process of case-relation with the same \nvariable. Also in this case, \nx\nE  of \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n is replaced with \nx\nE . \n③ \nx\nE is an event schema not including case-relation with undefined \nvalue. In this case, no one is replaced.   \nFor all event schema of \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n, we apply the procedure \ndescribed above and delete test factor “$” of edges in \n)\n,\n,\n,\n(\n2\n1\nk\nE\nE\nE\nMP\n\n. \nWe call such a diagram story.  \nLet us assume that \nn\nE\nE\nE\n,\n,\n,\n2\n1\n\n is a sequence of events in text P  \nand is understandable in memory. Then, we can obtain m  stories from \nm  memory schemas by applying consequence 1 of theorem 1.This \nrelational diagram consisting of m stories is called  understanding \ndiagram in memory of text P  and is denoted by \n)\n(P\nU\n in our paper.  \nFrom the above discussion we can see that understanding process in \nmemory depends on memory schema. Description ability of memory \nschema depends on the structure of memory schema and semantic \nrelations defined by system(Note that the memory schema of this paper \nassumes consequent occurrence of events)． \n \n4. Conclusion \n \nIn this paper, we defined event expression over sentences in natural \nlanguage and semantic relations between events. We also defined event \nschema, memory schema and understandable sequence of events in \nmemory. Based on this definition, we formally considered text \nunderstanding process having understanding diagram in memory.  \nScript model in [1] assumes some kind of concrete scripts(for example, \nmeal script and dentist script)．These scripts consist of stories of some \nfixed and multistoried structure. Besides it, scripts assume rich and \ndetailed contents which will be difficult constraints to realize. Memory \nschema of this paper can be constructed easily compare to [1]. \nWe think it is possible to make memory schema if we have a history of \nsome series. Of course, memory schema must be reasonable and standard \nas much as possible.  \n \nReferences \n1 R.C.Schank; The Concept Analysis of Natural Language, Natural Language \nProcessing, New York, Algorithmic Press, 1973, 291~309  \n2 S. MIaden et al; A Natural Language Processing for Semantic Web Servies, \nEUROCON 2005, Serbia & Montenegro, Belgrade, November, 2005,229~233  \n3 Hyeok Kong; Representation of the meaning of Korean sentence by event \nexpression，Journal of natural science, Kim Il Sung University, D.P.R.K, Vol. \n47, No.7, 2001,22~24 \n4 Hyeok Kong; Formalization of understanding model of Korean sentences，\nMathematics, Publishing house of science and technology, D.P.R.K, Vol. 51, \nNo.2, 2005, 47~49 \n",
  "categories": [
    "cs.CL"
  ],
  "published": "2012-12-19",
  "updated": "2012-12-19"
}