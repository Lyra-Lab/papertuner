{
  "id": "http://arxiv.org/abs/2008.07138v1",
  "title": "Logical Semantics, Dialogical Argumentation, and Textual Entailment",
  "authors": [
    "Davide Catta",
    "Richard Moot",
    "Christian Retoré"
  ],
  "abstract": "In this chapter, we introduce a new dialogical system for first order\nclassical logic which is close to natural language argumentation, and we prove\nits completeness with respect to usual classical validity. We combine our\ndialogical system with the Grail syntactic and semantic parser developed by the\nsecond author in order to address automated textual entailment, that is, we use\nit for deciding whether or not a sentence is a consequence of a short text.\nThis work-which connects natural language semantics and argumentation with\ndialogical logic-can be viewed as a step towards an inferentialist view of\nnatural language semantics.",
  "text": "Logical Semantics, Dialogical\nArgumentation, and Textual\nEntailment\nDavide Catta, Richard Moot, Christian Retor´e\nAbstract\nIn this chapter, we introduce a new dialogical system for ﬁrst\norder classical logic which is close to natural language argumentation, and\nwe prove its completeness with respect to usual classical validity. We combine\nour dialogical system with the Grail syntactic and semantic parser developed\nby the second author in order to address automated textual entailment, that\nis, we use it for deciding whether or not a sentence is a consequence of a\nshort text. This work — which connects natural language semantics and\nargumentation with dialogical logic — can be viewed as a step towards an\ninferentialist view of natural language semantics.\n1 Introduction\nWe propose an approach to the semantics of natural language inspired by\nthe inferentialist theory of meaning. Inferentialism is a philosophical current\ndeveloped in the 20th century from a certain reading of Wittgenstein’s philo-\nsophical research [24]. As is well known, the Austrian philosopher declared\nthat the meaning of a linguistic expression is not given by its truth value but\nby its use in a linguistic context. The inferentialists take up Wittgenstein’s\ntheory by claiming that the meaning of a sentence is given by its inferential\nuse within language. That is, the meaning of a sentence lies in its argumen-\ntative use, its justiﬁcations, its refutations and more generally its deductive\nrelation to other statements. We formally develop this kind of approach to\nthe theory of meaning using dialogical logic. Dialogical logic is an approach\nto formal semantics developed from Lorenzen’s pioneering work in the 1950s\n[15]. In dialogical logic the concept of validity is not deﬁned starting from\nDavid Catta, Richard Moot, Christian Retor´e\nLIRMM,\nUniv\nMontpellier,\nCNRS,\nMontpellier,\nFrance\ne-\nmail:ﬁrstname.lastname@lirmm.fr\n1\narXiv:2008.07138v1  [cs.CL]  17 Aug 2020\n2\nDavide Catta, Richard Moot, Christian Retor´e\nthat of interpretation in a structure. On the contrary, a formula is consid-\nered valid if, and only if, there is an argumentative strategy that, if followed,\nallows those who claim the formula to win any argumentative dialogue that\nmay arise when the formula is proferred.\nThe link with natural language semantics is obtained using type-logical gram-\nmars. Such grammars compute the possible meanings of a sentence viewed\nas logical formulae. In particular the Grail platform, a wide-scale categorial\nparser which maps French sentences to logical formulas [17, 16, 18], will be\npresented. We then use Grail and dialogical logic to solve some examples of\ntextual entailment from the FraCaS database [6].\nThis chapter is structured as follows. Section 2 introduces inferentialism\nand its motivations. Section 3 introduces dialogical logic for classical ﬁrst\norder logic and dialogical validity. Section 4 gives a proof of the fact that the\nclass of formulas that are dialogicaly valid is equal to the class of formulas that\nare valid in the standard meaning of the term i.e. true in all interpretations.\nSection 5 is an introduction to categorical grammars and Grail. We conclude\nwith the applications of semantics to the problem of textual inference.\nWe then show applications of this semantics to the problem of textual\nentailment using examples taken from the FraCaS database.\nHence this paper deepens and extends our ﬁrst step in this direction “in-\nferential semantics and argumentative dialogues” [5], mainly because of a\nstrengthened link with natural language semantics and textual entailment:\n• We do not require the formulas to be in a normal negative form as done\nin [5]. In this way the strategies correspond to derivations in a two-sided\nsequent calculus, i.e. with multiple hypothesis and multiple conclusions.\n• We use Grail to connect natural language inference (or textual entail-\nment) to argumentative dialogues: indeed Grail turns natural language\nsentences into logical formulas (delivered as DRS) — while our previous\nwork only assumed that sentences could be turned into logical formulas.\n• This lead us closer to inferentialist semantics: a sentence S can be in-\nterpreted as all argumentative dialogues (possibly expressed in natural\nlanguage) whose conclusion is S — under assumptions corresponding to\nword meaning and to the speaker beliefs.\n2 Inferentialism\nA problem with the standard view of both natural language semantics and\nof logical interpretations of formulas is that the models or possible worlds\nin which a sentence is true cannot be computed or even enumerated [19].\nAs far as pure logic is concerned there is an alternative view of meaning\ncalled inferentialism [8, 9, 21, 7, 2]. Although initially inferentialism took\nplace within a constructivist view of logic [8], there is no necessary conceptual\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n3\nconnection between accepting an inferentialist position and rejecting classical\nlogic as explained in [7].\nAs its name suggests inferentialism takes the inferential activity of an\nagent to be the primary semantic notion rather then truth. According to this\nparadigm, the meaning of a sentence is viewed as the knowledge needed to\nunderstand the sentence.\nThis view is clearly stated by Cozzo [7]\nA theory of meaning should be a theory of understanding. The meaning of an ex-\npression (word or sentence) or of an utterance is what a speaker-hearer must know\n(at least implicitly) about that expression, or that utterance, in order to understand\nit.\nThis requirement has some deep consequences: as speakers are only able\nto store a ﬁnite amount of data, the knowledge needed to understand the\nmeaning of the language itself should also be ﬁnite or at least recursively\nenumerable from a ﬁnite set of data and rules. Consequently, an inferentialist\ncannot agree with the Montagovian view of the meaning of a proposition as\nthe possible worlds in which the proposition is true. In particular because\nthere is no ﬁnite way to enumerate the inﬁnity of possible worlds nor to\nﬁnitely enumerate the inﬁnity of individuals and of relations in a single of\nthose possible worlds.\nLet us present an example of the knowledge needed to understand a word.\nIf it is a referring word like eat, one should know what it refers to the action\nthat someone eats something, possibly some postulates related to this word\nlike the eater is animated,1 and how to compose it with other words eat is\na transitive verb, a binary predicate; if it is a non referring word like which\none should know that it combines with a sentence without subject (a unary\npredicate), and a noun (a unary predicate), and makes a conjunction of those\ntwo predicates.\nObserve that this knowledge is not required to be explicit for human com-\nmunication. Most speakers would ﬁnd diﬃcult to explicitly formulate these\nrules, especially the grammatical ones. It does not mean that they do not\npossess this knowledge.\nAn important requirement for a theory of meaning is that the speaker’s\nknowledge can be observed, i.e. his knowledge can be observed in the in-\nteractions between the speaker(s), the hearer(s) and the environment. This\nrequirement is supported by the famous argument against the private lan-\nguage of Wittgenstein [24] This might be explained as follows. Imagine that\ntwo speakers have the same use of a sentence S in all possible circumstances.\nAssume that one of the two speakers includes as part of the meaning of S\nsome ingredient that cannot be observed. This ingredient has to be ignored\nwhen deﬁning the knowledge needed to master the meaning of S. Indeed,\n1 Our system is able to deal with metaphoric use, like the The cash machine ate my credit\ncard. see e.g. [22].\n4\nDavide Catta, Richard Moot, Christian Retor´e\naccording to the inferentialist view, a misunderstanding that can neither be\nisolated nor observed should be precluded.\nAnother requirement for a theory of meaning is the distinction between\nsense and force, on which we shall be brief. Since Frege, philosophy of lan-\nguage introduced the distinction between the sense of the sentence and its\nforce. The sense of a sentence is the propositional content conveyed by the\nsentence, while its force is its mood — this use of the word “mood” is more\ngeneral than its linguistic use for verbs. Observe that the same propositional\ncontent can be asserted, refuted, hoped etc. as in the three following sen-\ntences Is the window open? Open the window! The window is open.. Here we\nfocus on assertions, and questions.\n3 Dialogical Logic\nUsually the inferentialist view of meaning is formally developed, as far as\nlogic is concerned, by the use of natural deduction systems [11]. We deviate\nfrom this type of treatment by proposing to formally implement the ideas of\ninferentialist meaning theory through the tools provided by dialogical logic.\nIn our view, the connection with semantics based on the notion of argument\nis clearer within the latter paradigm: an argument in favor of a statement\nis often developed when a critical audience, real or imaginary, doubts the\ntruth, or the plausibility of the proposition. In this case, in order to success-\nfully assert the statement, a speaker or proponent of it must be capable of\nproviding all the justiﬁcations that the audience is entitled to demand. Tak-\ning this idea seriously, an approximation of the meaning of a sentence in a\ngiven situation can be obtained by studying the argumentative dialogues that\narise once the sentence is asserted in front of such a critical audience. This\ntype of situation is captured, with a reasonable degree of approximation by\ndialogical logic. In the dialogical logic framework, knowing the meaning of a\nsentence means being able to provide a justiﬁcation of the sentence in front\nof a critical audience. Note that with this type of methodology the require-\nment of manifestability required to attribute knowledge of the meaning of a\nsentence to a locutor is automatically met. The locutor who asserts a certain\nformula is obliged to make his knowledge of the meaning manifest so that he\ncan answer the questions and objections of his interlocutor. In addition, any\nconcessions made by his interlocutor during the argumentative dialogue will\nform the linguistic context in which to evaluate the initial assertion.\nWe now gradually present dialogical logic. Although the study of dialec-\ntics — the art of correct debate — and logic — the science of valid reasoning\n— have been intrinsically linked since their beginnings [4, 20, 3], modern\nmathematical logic had to wait until the 50s of the last century to ensure\nthat the logical concept of validity was expressed through the use of dialog-\nical concepts and techniques. Inspired by the Philosophical Investigations of\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n5\nWittgenstein [24], the German mathematician and philosopher Lorenzen [15]\nproposed to analyze the concept of validity of a formula F through the con-\ncept of winning strategy in a particular type of two-player game. This type\nof game is nothing more than an argumentative dialogue between a player,\ncalled Proponent, which aﬃrms the validity of a certain formula F and an-\nother player, called opponent, which contends its validity. The argumentative\ndialogue starts by the proponent aﬃrming a certain formula. The opponent\ntakes turns and attacks the claim made by the proponent according to its\nlogical form. The proponent can, depending on his previous assertion and\non the form of the attack made by the opponent, either defend his previous\nclaim or counter attack. The debate evolves following this pattern. The pro-\nponent wins the debate if he has the last word, i.e., the defence against one\nof the attack made by the opponent is a proposition that the opponent can\nnot attack without violating the debate rules.\nDialogical logic was initially conceived by Lorenzen as a foundation for\nintuitionistic logic (IL). Lorenzen idea was, roughly speaking, the following.\nIt is possible to deﬁne a “natural” class of dialogue game in which given a\nformula F of IL, i the proponent can always win a game on F, no matter how\nthe opponent choose to attack his assertion in the debate, if F is IL-valid. This\nintuition was formalized as the completeness of the dialogical proof system\nwith respect to provability or validity in any model:\nCompleteness of a dialogical proof system: Given a logical language L and a\nnotion of validity for L (either proof theoretical or model theoretical) and\na notion of dialogical game, a formula F is valid in L if and only if, there\nis a winning strategy for the proponent of F in the class of games under\nconsideration.\nWhere a winning strategy can be intuitively understood as an algorithm\nthat take as input the moves of the game made so far and outputs proponents\nmoves. Unfortunately, almost 40 years of work were needed to get a ﬁrst cor-\nrect proof of the completeness theorem [10]. Subsequently diﬀerent systems\nof dialogic logic were developed. We present here a system of dialogical logic\nthat is complete for classical ﬁrst order logic.\n3.1 Language, Positive and Negative Subformulas\nWe consider a ﬁrst order language L in which the deﬁnition of terms and\nformulas is given as usual, and in which the negation of a formula ¬F is\ndeﬁned by F ⇒⊥where ⊥is an arbitrary atomic formula. Since we will use\nthe notion of Gentzen’s subformula and the positive (negative) occurrence of\na subformula in a formula later, let us brieﬂy detail these notions.\n1. F is a Gentzen-subformula of F\n6\nDavide Catta, Richard Moot, Christian Retor´e\n2. if F1 ⋆F2 is a Gentzen-subformula of F so are F1, F2 for ⋆∈{∧, ∨, ⇒}\n3. if ¬F ′ is a Gentzen-subformula of F so is F ′\n4. if QxF ′ is a Gentzen-subformula of F so is F ′[t/x] for all t free for x in\nF ′ and Q ∈{∀, ∃}\nIn the rest of the paper the term subformula will always be used as a\nshort-cut for the term Gentzen-subformula.\nThe notions of positive and negative subformulas are deﬁned as follows\n1. F is a positive subformula of F\n2. if F1 ∧F2 or F1 ∨F2 is a positive (resp negative) subformula of F so are\nF1, F2\n3. if QxF ′ is a positive (resp. negative) subformula of F so is F ′[t/x]\n4. if F1 ⇒F2 positive (resp negative) subformula of F, then F1 is a negative\n(resp. positive) subformula of F, and F2 is a positive (resp. negative)\nsubformula of F\n5. if ¬F ′ is a positive (resp negative) subformula of F then F ′ is a negative\n(resp. positive) subformula of F\n3.2 Attack Rules\nHere we deﬁne the rules that permit to attack a formula and what counts as\na defence against the attack. The symbols in the central column that are not\nformulas are called auxiliary symbols\nAssertion Attack Defence\nF1 ⇒F2 F1\nF2\nF1 ∧F2\n?∧i\nFi\nF1 ∨F2\n?∨\nFi\n∀xF\n?∀[t/x] F[t/x]\n∃xF\n?∃\nF[t/x]\nIn the table i ∈{1, 2}, x stands for an arbitrary variable, and t stands for\nan arbitrary term. In the attack ?∀[t/x] and in the defence F[t/x], t is called\nthe chosen term. For the sake of clarity we provide a paraphrase of the rules.\n⇒If one of the two participants in the dialogue asserts a conditional\nF1 ⇒F2, his opponent may attack this assertion by asserting, in turn,\nthe antecedent of the conditional F1 and ask him to assert F2. The one\nwho asserted the conditional can defend himself against this attack by\nasserting F2, or, he can counterattack on F1. If he chose the latter option,\nthe roles of the two players would be reversed.\n∧If one of the two participants in the dialogue aﬃrms a conjunction, his\nopponent may attack the assertion by choosing one of the two members\nof the conjunction and asking to continue the dialogue by asserting the\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n7\nchosen member. The one who asserted the conjunction can defend himself\nby asserting the member chosen by his opponent.\n∨If one of the two participants in the dialogue asserts a disjunction, his\nopponent attacks the assertion by asking him to choose one of the two\nmembers and assert it. The one who asserted the disjunction can defend\nhimself by choosing one of the two members and asserting it.\n∀If one of the two participants in the dialogue asserts universally quantiﬁed\nformula ∀xF his opponent may attack the formula by choosing a term t\nof the language and asking him to assert F[t/x], i.e., the formula in which\nthe variable x is replaced by the term t. The one who has asserted the\nuniversally quantiﬁed formula can defend himself against such an attack\nby asserting F[t/x].\n∃if one of the two participants in the dialogue asserts a existentially quan-\ntiﬁed formula ∃xF his opponent may attack the formula by asking him\nto choose a term t of the language and assert F[t/x], i.e. the formula in\nwhich the variable x is replaced by the term t. The one who has asserted\nthe existentially quantiﬁed formula can defend himself against such an\nattack by choosing a term t and asserting F[t/x].\nRemark that the rule ∧and ∀are similar: the one who attacks the assertion\nmakes the choice of the subformula or of the term respectively. In the same\nway the rule for ∨and ∃are similar. The choice of the subformula, or of the\nterm, is a responsibility of the one who defends.\n3.3 Rules of Dialogical Games\nMoves are pairs (i, s) with i ∈{?, !} and s being either a formula or an aux-\niliary symbol. Moves are called attacks whenever i =? and defences whenever\ni =!.\nAn attack (?, F) with F a formula is said to be an assertion.\nDefences are assertions.\nA Pre-justiﬁed sequence is given by a sequence of moves M = M0, M1 . . . Mj . . .,\ntogether with a partial function f : M →M such that for all all Mi in the\nsequence for which f is deﬁned, f(Mi) < Mi. Let\nM = M0, M1 . . . Mj . . .\nAn attack move Mn of the form (?, s) is said to be justiﬁed whenever\nf(Mn) is an assertion of F and s is an attack of F. We say that f(Mn) is\nthe enabler of Mn.\nA defence Mn of the form (!, F) is justiﬁed if f(Mn) = (?, s) is a justiﬁed\nattack of Mj Mj asserts F ′, s attacks F ′ and F is a defence from s. Mi is\nthe enabler of Mn. An assertion Mn is a reprise if and only if there exists\nanother move Mj with smaller index and opposite parity that asserts the\nsame formula. An assertion Mn is called an existential repetition, if its\n8\nDavide Catta, Richard Moot, Christian Retor´e\nenabler is of the form (?, ∃) and there is another move of the same parity M ′\nn\nwith n′ < n having the same enabler. A pre-justiﬁed sequence in which each\nmove is justiﬁed is called justiﬁed sequence\n3.4 Games\nDeﬁnition 1 A game for a formula F is a pre-justiﬁed sequence\nMo, M1, . . . Mj . . .\nsuch that\n1. Mo is (!, F) and M1, . . . Mj . . . is a justiﬁed sequence of in which each odd-\nindex move is enabled by the its immediate predecessor and in which each\neven-index move is enabled by a preceding odd-index move\n2. if an even-index move asserts an atomic formula then it is a reprise.\n3. for all even m, n if Mm and Mn are defence moves that asserts the same\nsubformula occurrence of F and are enabled by the same move Mj then\nm = n\nOdd-index moves are opponent moves (O-moves) while even index moves\nare called proponent moves (P-moves). A move M is legal for a game G if\nthe pointing sequence G, M is a game.\nA game G is won by the proponent if, and only if, it is ﬁnite and there is\nno O-move which is legal for D. It is won by the opponent otherwise.\nHere are some properties needed in the proof of the completeness of our\ndialogical games.\nProposition 1 Let M = Mo, . . . Mn be a game. M is won by P only if, Mn\nis the assertion of some atomic formula a(t1, . . . tm)\nProposition 2 For all game G, for all formula F for all subformula F ′ of\nF. If there is an P-move (O-move) in G that asserts F ′ then F ′ is a positive\n(negative) subformula of F.\nProof Let F be any formula and G any game. We show the proposition by\ninduction on the length of G. If the length is 1 then G consist of only one\nmove that is a P-move asserting a formula F and so the proposition holds.\nSuppose that the proposition holds for all games G having length n and let\nG′ be a game having length n + 1. Let Mn be the last move of G′. Suppose\nthat Mn is a P-move (the argument for O-moves runs in a very similar way)\nWe have three cases.\n1. If Mn is not an assertion the proposition holds automatically by induction\nhypothesis.\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n9\n2. if Mn is a defence asserting some formula F ′. Since G′ is a game the\nsequence M1 . . . Mn is justiﬁed. Thus Mn is enabled by some O-move\nMk with (k < n). If Mk := (?, F1) (the other cases are easier) then it\nis an attack against Mk−1 and Mk1 is a P-move that asserts F1 ⇒F ′.\nBy induction hypothesis F1 ⇒F ′ is a positive subformula of F, and F1\nis a negative subformula of F. Thus F ′ is a positive subformula of F by\ndeﬁnition.\n3. If Mn is an assertion and an attack, let F ′ be the asserted formula. As\nbefore there must exists an enabler of Mn, call it Mk (k < n), Mk is\nnecessarily an O-move that asserts the formula F ′ ⇒F ′′. By induction\nhypothesis this last formula is a negative subformula of F, thus F ′ is a\npositive subformula of F by deﬁnition.\n□\nAn easy consequence of the latter proposition is the following\nProposition 3 Let G be a game for a formula F and let Mn be a P-move in\nG asserting an atomic formula a(t1, . . . tm). Then this latter formula appears\nboth as a negative and positive subformula of F\n3.5 Strategies\nInformally speaking, a strategy for a player is an algorithm for playing the\ngame that tells the player what to do for every possible situation throughout\nthe game. We informally describe how a strategy should operate and then\nformalize this notion. Imagine being engaged in a game G, that the last move\nof G was played according to the strategy, and that it is now your opponent’s\nturn to play. Your opponent could extend the game in diﬀerent ways: for\nexample if you are playing chess, you are white and you just made your ﬁrst\nmove by moving a pawn to a certain position of the chessboard, black can\nin turn move a pawn or move a horse. If you are playing according to the\nstrategy, the strategy should tell you how to react against either type of move.\nIf black moves a pawn to C6 and you just moved your pawn to C3 then move\nthe horse to H3. If black moves a horse to H6 and you just moved your pawn\nto C3 then move you pawn in B4. This type of pattern can be visualized as\na tree in which each node is a move in the game, the moves of my opponent\nhave at most one daughter, and my moves have as many daughters as there\nare available moves for my opponent. In fact it is rather standard, in the\ngame semantics/dialogical logic literature to deﬁne a strategy as a tree of\ngames [10, 1, 13]. We thus formalize the notion of strategy as follows. Given\na game G we say that a variable x appears in the game iﬀx appears in some\nasserted formula or is free in the choice of some universal attack. Let (vi)i∈I\nbe an enumeration of the variables in L. A strategy S is a preﬁx-closed set\nof games for the same formula (i.e. a tree of games for the same formula)\nsuch that\n10\nDavide Catta, Richard Moot, Christian Retor´e\n1. If G belongs to the strategy and the last move of G is a P move that\nneither an assertion of a universally quantiﬁed formula nor an existential\nattack then for all move M legal for G, G, M belongs to the strategy\n2. if G, M and G, M ′ belong to S and M, M ′ are P-moves then M = M ′\n3. if G, M and G, M ′ belongs to S and M, M ′ are O-moves and universal\nattacks then M = M ′ moreover the chosen variable is the ﬁrst variable\nin the enumeration that does not appear in G\n4. if D, M and D, M ′ belongs to S and M, M ′ are O-moves and existential\ndefences then M = M ′ moreover the term chosen to defend is the ﬁrst\nvariable in the enumeration that does not appear in G\n5. if G belongs to S and the last move of G is O-move that is an attack\nagainst an existential quantiﬁer then G, M belongs to S, where M is a\ndefence against the last move of G\nA strategy S is P-winning iﬀeach game in S is won by P. Considering\nthat a strategy is a tree of games, in what follows we will sometimes speak\nof nodes of a strategy as a shortcut for moves of a game G that belongs to\nthe strategy.\n3.6 Validity\nDeﬁnition 2 Given a ﬁrst order formula F we say that F is dialogically valid\nif, and only if, there exists a winning strategy S for the the formula.\nBelow are three examples of winning strategies. The blue dotted arrow\nrepresent the function f that points back from P moves to the O move that\nenables them. keep in mind that every O-move is enabled by the immediately\npreceding move.\n4 Dialogical Validity is Classical Validity\nIn this section we show the equivalence, for a formula F between the dialogical\nvalidity of F (the existence of winning strategy for the proponent of F) and\nclassical validity of F (F being true in all interpretations). To prove this\nequivalence, we use a particular version of the sequent calculus, GKK (see\nthe table below). The calculus GKK is a variant of the sequent calculus GKm\n[23], an extension to ﬁrst order of the propositional calculus LKQ by Herbelin\n[12]: all those calculi are complete for classical logic (ﬁrst order for GKK and\nGKm, propositional for LKQ), in the sense that a sequent Γ ⊢∆can be\nderived if and only if the formula V Γ ⇒W ∆classically valid.\nLater on, as Herbelin does for LKQ, we shall consider a restriction (strate-\ngic derivations) on the use of the left implication introduction rule, a re-\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n11\n!, ∀xa(x) ∨∃x¬a(x)\n?∨\n!, ∀xa(x)\n?, ∀[w/x]\n!, ∃x¬a(x)\n?, ∃\n!, ¬a(w)\n?, a(w)\n!, a(w)\n!, ∃x(a(x) ⇒∀ya(y))\n?, ∃\n!, a(c) ⇒∀ya(y)\n?, a(c)\n!, ∀ya(y)\n?, ∀[w/y]\n!, a(w) ⇒∀ya(y)\n?, a(w)\n!, a(w)\n!, ∀x(a(x) ∧b(x)) ⇒(∀xa(x)) ∧(∀xb(x))\n[∀x(a(x) ∧b(x))\n!(∀xa(x)) ∧(∀xb(x))\n[?∧1\n!∀xa(x)\n?, ∀[w/x]\n?∀[w/x]\n!, a(w) ∧b(w))\n?, ∧1\n!, a(w)\n!a(w)\n?, ∧2\n!, ∀xb(x)\n?, ∀[w/x]\n?, ∀[w/x]\n!, a(w) ∧b(w)\n?, ∧2\n!, b(w)\n!, b(w)\nFig. 1 Three winning strategies.\nstriction which does not aﬀect the completeness of the sequent calculus with\nrespect to validity.\n12\nDavide Catta, Richard Moot, Christian Retor´e\nDeﬁnition 3 The sequent calculus GKK is deﬁned by the rules below:\nId\nΓ, A ⊢A, ∆\nΓ, A ⊢B, ∆\n⇒R\nΓ ⊢A ⇒B, ∆\nΓ, A ⇒B ⊢A, ∆\nΓ, A ⇒B, B ⊢∆\n⇒L\nΓ, A ⇒B ⊢∆\nΓ ⊢A, ∆\nΓ ⊢B, ∆\n∧R\nΓ ⊢A ∧B, ∆\nΓ, A, A ∧B ⊢∆\n∧L1\nΓ, A ∧B ⊢∆\nΓ, B, A ∧B ⊢∆\n∧L2\nΓ, A ∧B ⊢∆\nΓ ⊢A, B, ∆\n∨R\nΓ ⊢A ∨B,∆\nΓ, A ∨B, A ⊢∆\nΓ, A ∨B, B ⊢∆\n∨L\nΓ, A ∨B ⊢∆\nΓ ⊢∃xA, A[t/x], ∆\nΓ ⊢∃xA, ∆\nΓ, A[y/x], ∃xA ⊢∆\nΓ, ∃xA ⊢∆\nΓ ⊢A[y/x], ∆\n∀R\nΓ ⊢∀xA, ∆\nΓA(t), ∀xA ⊢∆\n∀L\nΓ, ∀xA ⊢∆\nHere are some comments and terminology on the calculus GKK:\n• Greek upper-case letters Γ, ∆, . . . stand for multisets of formulas.\n• In the Id-rules A is an atomic formula. Since this rule has no premisse it\nis also called an axiom.\n• In the rules ∀R and ∃L the variable y does not occur anymore in their\nconclusion sequents.\n• The bold formulas in the conclusion of each rules are called active for-\nmulas.\n• A derivation π of a sequent Γ ⊢∆is a tree of sequents constructed\naccording to the above rules, in which leaves are axioms Id-rules.\n• We say that a sequent Γ ⊢∆is derivable or provable whenever there\nexists a derivation of it from axioms.\n• A derivation π of Γ ⊢∆with Γ empty and ∆reduces to one formula F,\nis said to be a proof of F.\nProposition 4 A sequent Γ ⊢∆is derivable in the sequent calculus GKK if\nand only if is derivable in Gkm.\nProof (Sketch) One just shows that each rule in the above sequent calcu-\nlus is admissible in Gkm and vice-versa, using contraction and weakening\nadmissibility, adapting the proof from e.g. [23].\n□\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n13\n4.1 From Strategies to Derivations\nBecause sequent calculus is complete for classical logic, the following propo-\nsition shows that a formula F with a winning strategy is true in any inter-\npretation.\nProposition 5 Given a formula F, if there is a winning strategy for F then\nthere is a proof π of F in sequent calculus GKK.\nTo do so, we associate sequents to nodes of a strategy and we prove that\nwhenever the sequents associated with nodes of height n are provable, so are\nthose of height n + 1. So let’s start by associating sequents to some nodes of\na strategy. To do this we focus on nodes of a strategy that are O moves.\nLet S be a strategy and G be a game in S. Consider the sequence of moves\nM in G obtained by forgetting all its P-moves i.e if G is M0, M1, · · · M2n · · ·\nthen M is\nM1, M3, . . . M2n−1 . . .\nCall D(S) the preﬁx closed set (i.e. the tree) of such sequences containing\nthe empty sequence ϵ. Given a strategy S we associate a sequent ΓM ⊢∆M\nto each M ∈D(S) in the following way\n1. To the empty sequence ϵ we associate F.\n2. if the sequence ends in an assertion move\na. if the assertion is a defence move (!, F) then we associate the sequent\nΓ, F ⊢∆where Γ ⊢∆is the sequent associated to the preﬁx of the\nsequence\nb. if the assertion is an attack move (?, F) against (in the game ) an\nassertion of F →C then we associate the sequent Γ, F ⊢C, ∆where\nΓ ⊢∆is the sequent associated to the preﬁx of the sequence from\nwhich we have erased the formula F ⇒C on the right of ⊢\n3. if the sequence end in a move that is not an assertion then it should be\nan attack, (?, s) where s is an auxiliary symbol. We have three type of\ncase\na. If s is either ?∨, ∧1 or ∧2 then we associate the sequent Γ ⊢∆′ where\nΓ is equal to the Γ associated to the preﬁx of the sequence, and ∆′\nis the sequent ∆associated to the preﬁx of the sequence from which\nwe have erased the formula C asserted by the move that is attacked\nby (?, s) and to which we have added the sub-formula of C chosen by\nO in the case of ∧i and both subformulas of C is s is ∨\nb. if s is ∀[w/x] then we associate the sequent Γ ⊢A[w/x], ∆′ where\nA[w/x] is the subformula of the formula ∀xA asserted by P and\nattacked by (?, s) and ∆is obtained by erasing ∀xA from ∆in the\nsequent Γ ⊢∆associated to the preﬁx of the sequence.\n14\nDavide Catta, Richard Moot, Christian Retor´e\nc. if s is ∃then we associate the sequent Γ ⊢F(t), ∆where F(t) is the\nformula asserted by P in is defence against (?, s) and Γ ⊢∆is the\nsequent associated to the preﬁx of the sequence. Remark that the\nP-defence must exists by the deﬁnition of strategy.\nGiven a winning strategy S, observe that D(S) can be viewed as a (non\nempty) ﬁnite tree (D(S), ≺) with ≺deﬁned by (M) ≺M′ if and only if M\nis a suﬃx of M — ≺is the order associated with the tree structure on D(S).\nThe above procedure yields D(S), a tree node-labeled with sequents —\nsome object similar to a sequent calculus proof – such that:\n• the leaf-labels are of the form Γ, A ⊢A, ∆with A an atomic proposition,\n• any formula in a sequent labeling a node of depth n is a subformula of\nsome formula of the sequent labeling the nodes of depth n + 1.\nThe following lemma assures us that the labelled tree respects the variable\nrestriction on ∀R ∃L\nLemma 1 Let S be a winning strategy and let M be a sequence in D(S).\nSuppose that M ends in a move that is an attack against a universal quantiﬁer\n(?, ∀[w/x]) or a defence against an existential attack (!, A[w/x]). Then the\nvariable w does not appears free in the sequent associated to the proper preﬁx\nof M\nA decorated tree D(S) of a strategy S really looks like a derivation in the\nsequent calculus GKK.\nWe are now ready to prove the following lemma, which clearly entails\nproposition 5 above:\nLemma 2 To each M ∈D(S) we can associate a derivation πM of ΓM ⊢∆M\n— the sequent associated to M.\nProof By well-founded induction on (D(S), ≺). Suppose that for each suﬃx\nM of M′ the proposition holds. We associate a derivation to M′ by consid-\nering the last move of M2n Φ(M). Where ΦM is the unique game G in S\nending in a P-move such that M is obtained from G by erasing P-moves.\nWe only present here some non straightforward cases:\n1. if M2n is an attack (?, A) on the assertion A ⇒C depending on the form\nof A\n• if A is atomic then the immediate suﬃx of M is M(!, C) for which\nthe proposition hold by hypothesis. We associate it with the following\nderivation\nΓ, A ⇒C, A ⊢A\n...πM(!,C)\nΓ, A ⇒C, C ⊢F\nΓ, A ⇒C ⊢F\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n15\n• if A = (A1⇒A2) then M has two immediate suﬃxes namely M, (?, A1)\nand M, (!, C), for which the proposition holds by hypothesis. We as-\nsociate the following derivation:\n...πM′(?,A1)\nΓ, (A1 ⇒A2) ⇒C, A1 ⊢A2\nΓ, (A1 ⇒A2) ⇒C ⊢A1 ⇒A2\n...πM′(!,C)\nΓ, (A1 ⇒A2) ⇒C, C ⊢F\nΓ, (A1 ⇒A2) ⇒C ⊢F\n• If M2n is an existential repetition asserting a formula F[t/x] we pro-\nceed as follows: we only consider the case where F[t/x] := (F1 ⇒\nF2)[t/x], By induction hypothesis there is derivation of the sequent\nΓF1 ⊢∃xF1[t/x] ⇒F2[t/x], ∆associated to the direct suﬃx M(?, F1)\nof M. We thus associate the following derivation\n...πM(?,F1)\nΓF1[t/x] ⊢∃x(F1 ⇒F2), F2[t/x], ∆\n⇒R\nΓ ⊢∃x(F1 ⇒F2), (F1 ⇒F2)[t/x], ∆\n∃R\nΓ ⊢∃x(F1 ⇒F2), ∆\nThis proves proposition 5 and thus assures us that that if a formula is\ndialogically valid then it is provable in sequent calculus, hence true in any\ninterpretation.\n4.2 From Derivations to Strategies\nWe have just shown that if a formula is dialogically valid then it is provable\nin sequent calculus GKK. We now show the converse, by turning a GKK\nsequent calculus derivation into a winning a strategy, but we shall impose\na restriction on GKK derivations — a restriction which derives exactly the\nsame sequents.\nIndeed not all derivations in GKK are the image of some winning strategy.\nFor instance, the two derivations below where c(x), a, b are atomic formulas\nare not the image of any winning strategy S although there are winning\nstrategies for the two formulas (bold formulas are active occurences of for-\nmulas in the sequent):\nc(x) ⊢c(x)\n∀xc ⊢c(x)\n∀xc ⊢∃xc\n16\nDavide Catta, Richard Moot, Christian Retor´e\na ⇒b, a ⊢a, b\na ⇒b ⊢a, a →b\nb, a ⇒b, a ⊢b\nb, a ⇒b ⊢a ⇒b\na ⇒b ⊢a ⇒b\n⊢(a ⇒b) ⇒(a ⇒b)\nThis leads us to restrict proofs of GKK to strategic proofs which derive the\nsame sequents but always correspond to winning strategies, and to proceed\nas follows:\n• We ﬁrst give a very informal description of the procedure that we use to\ntransform a derivation into a strategy\n• By looking on how the derivation should be made in order for the proce-\ndure to be successful we deﬁne a subclass of derivations of GKK called\nstrategic derivations\n• We show that the subclass is complete, in the sense that if the sequent\nΓ ⊢∆is provable then it corresponds to a strategic derivation.\nAssume we already converted a derivation into a tree of moves, from con-\nclusion to premises, up to a certain point by associating with each active\nformula, a set of sequences of moves. Assume that for each node a of depth\nn in the derivation, the branch of the derivation from a to the root is asso-\nciated with a game G for the formula that is the root of the derivation. Let\na1, · · · , ak be the the sons of a having depth n + 1.\nWe proceed as follows, starting with a1\n1. if a1 bears a sequent in which the active formula A is on the right then\nit is obtained by a right rule or an id rule. Add to G one move by P\nthat asserts A obtaining G′. If these last assertion can be attacked by\nO enumerate the attacks Mi such that G′, Mi is a game and obtain i\nsequences of moves that are games\n2. if a1’s label is a sequent in which the active formula A is on the left then\na1 is obtained by a left rule. Add to G one move by P that consist in\nattacking A obtaining a game G′ (if a is a conjunction or a universal quan-\ntiﬁer look at the premise of a′ in order to ﬁnd the right conjunct/term).\nContinue by extending G′ to (respectively) G′M1, . . . G′, Mn where the\nMi are either defences against the last move of G′ or counter attack and\nare all O-moves\nSuch a procedure clearly ends.\nIf in (1) the active formula is an existentially quantiﬁed formula ∃xB then\nP asserts the formula and next it is attacked by O with (?, ∃). By deﬁnition\nof a strategy, P has to asserts B[t/x]. This means that a1 should have just\none son a2 in which the formula B[t/x] is active.\nA similar situation occurs in (2) when the active formula is a conditional\nA ⇒B: P has to assert A, so A must be the active formula of the left premise\nof the ⇒L rule.\nIn order to overcome this problem, we introduce the following deﬁnition:\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n17\nDeﬁnition 4 (Strategic derivations) A derivation π in GKK is said to be\nstrategic whenever the two conditions below hold:\n• for each application of a left rule, the formula occurrence A in the left-\nhand premise is active.\nΓ, A ⇒B ⊢A, ∆\nΓ, A ⇒B, B ⊢∆\n⇒L\nΓ, A ⇒B ⊢∆\n• for each ∃R rule application the formula occurence A[t/x] is active in the\npremise:\nΓ ⊢∃xA, A[t/x], ∆\nΓ ⊢∃xA, ∆\nProposition 6 If π is a strategic derivation of F then the procedure above\noutputs a winning strategy for F\nGiven these last proposition we can conclude our proof by the following\nLemma 3 For any multiset of formulas Γ, ∆there is a derivation of the\nsequent Γ ⊢∆iﬀand only iﬀthere is a strategic derivation of Γ ⊢∆\nProof The direction from right to left is straightforward: each strategic\nderivation is a derivation in GKK.\nThe other direction results from a structural induction on the derivation\nπ in GKK. All cases are straightforward except when π is obtained by π′ by\nthe application of a ⇒L rule or an ∃R rule. Let us discuss the ∃R rule, which\ntogether with a similar result in [12] dealing with all the propositional cases\nentail our proposition.\nIf π ends in a ∃R rule application then, by induction hypothesis there\nis a strategic derivation π1 of its premise Γ ⊢A[t/x], ∃xA, ∆. if A[t/x] is\nactive we are done. If not we can suppose, without loss of generality that the\nrule application in which A[t/x] is active is just above the last rule R of π1.\nThe ”hard” case is when R is a ∀R rules, A[t/x] = ∃yB(t, y) i.e. π1 has the\nfollowing shape:\n...\nΓ ⊢B(t, t′), A(y)\nΓ ⊢∃yB(t, y), D(y)\nΓ ⊢∃B(t, y), ∀wD\nThe problem being that the term t′ can contain a free occurrence of y. In\nthis case we let permute the ∃R upwards in this way:\n18\nDavide Catta, Richard Moot, Christian Retor´e\n...\nΓ ⊢B(t, t′), A(y), ∆′\nΓ ⊢∃yB(t, y), D(y), ∆\nΓ ⊢∃B(t, y), D(y), ∆′\nΓ ⊢∃xA, D(y), ∆′\nΓ ⊢∃xA, ∀wD, ∆′\nThat way we obtain a strategic proof we wanted.\n□\nThis concludes our proof of the equivalence between winning strategies\nfor our dialogical games and the existence of a proof in classical logic (here\nviewed, without lost of generality, as a strategic GKK proof).\n5 Categorial Grammars and Automated Theorem\nProving\nType-logical grammars are a family of frameworks for the analysis of natural\nlanguage based on logic and type theory. Type-logical grammars are generally\nfragments of intuitionistic linear logic, with the Curry-Howard isomorphism\nof intuitionistic logic serving as the syntax-semantics interface. Figure 2 shows\nthe standard architecture of type-logical grammars.\n1. given some input text, a lexicon translates words into formulas the result\nis a judgment in some logical calculus, such as the Lambek calculus or\nsome variant/extension of it,\n2. the grammaticality of a sentence corresponds to the provability of this\nstatement in the given logic (where diﬀerent proofs can correspond to\ndiﬀerent interpretations/readings of a sentence),\n3. there is a forgetful mapping from the grammaticality proof into a proof\nof multiplicative, intuitionistic linear logic,\n4. by the Curry-Howard isomorphism, this produces a linear lambda term\nrepresenting the derivational meaning of the sentence (that is, it provides\ninstructions for how to compose the meanings of the individual words),\n5. we then substitute complex lexical meanings for the free variables corre-\nsponding to the lexical entries to obtain a representation of the logical\nmeaning of the sentence,\n6. ﬁnally, we use standard theorem proving tools (in ﬁrst- or higher-order\nlogic) the compute entailment relations between (readings of) sentences.\nTo make this more concrete, we present a very simple example, using\nthe Lambek calculus. The Lambek calculus has two connectives2, A/B, pro-\n2 We ignore the product connectives ‘•’ here, since it has somewhat more complicated\nnatural deduction rules and it is not used in the examples.\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n19\nSyntax\nSemantics\nPragmatics\ninput text\ncategorial\ngrammar proof\nmultiplica-\ntive linear\nlogic proof\nlinear lambda\nterm\nlogical seman-\ntics (formulas)\nsemantics and\npragmatics\nhomomorphism\nisomorphism\nlexical\nsubstitution,\nnormalization\nlexical\nsubstitution,\nparsing\ntheorem\nproving\nFig. 2 The standard architecture of type-logical grammars\nΓ ⊢A\n∆⊢A\\B\nΓ, ∆⊢B\n[\\E] Γ ⊢B/A\n∆⊢A\nΓ, ∆⊢B\n[/E]\nA, Γ ⊢B\nΓ ⊢A\\B [\\I]\nΓ, A ⊢B\nΓ, B/A\n[/I]\nTable 1 The Lambek calculus\nΓ ⊢N : A\n∆⊢M : A ⊸B\nΓ, ∆⊢(M N) : B\n[⊸E] x : A, Γ ⊢M : B\nΓ ⊢λx.M : A\\B [⊸I]\nTable 2 The multiplicative intuitionistic linear logic with linear lambda term labeling\nnounced A over B, representing a formula looking for a B constituent to its\nright to form an A, and B\\A, pronounce B under A, representing a formula\nlooking for a B constituent to its left to form an A. Table 1 shows the logical\nrules of the calculus. We’ll look at the French sentence ‘Un Su´edois a gagn´e\nun prix Nobel’ (A Swede won a Nobel prize). Figure 3 shows a Lambek cal-\nculus proof of this sentence. It shows that when we assign the formula n, for\n(common) noun, to ‘prix’ and n\\n to ‘Nobel’, we can derive ‘prix Nobel’ as\nan n. Similarly, when we assign np/n to ‘un’ we can combine this with ‘prix\nNobel’ of type n to produce ‘un prix Nobel’ as a noun phrase np. We can\ncontinue the proof as shown in Figure 3 to show that ‘Un Su´edois a gagn´e\nun prix Nobel’ is a main, declarative sentence s.\nThe lambda-term of the corresponding linear logic proof is (g(u p))(u s)\n(we have simpliﬁed a bit here, treating ‘a gagn´e’ and ‘prix Nobel’ as units).\nWe then substitute the lexical semantics to obtain the logical representation\nof the meaning of this sentence. The simple substitutions are su´edois for s and\nprix Nobel for p. The two complicated substitutions are the two occurrences\nof u which are translated as follows.\n20\nDavide Catta, Richard Moot, Christian Retor´e\nUn\nnp/n\n[Lex]\nsu´edois\nn\n[Lex]\nUn, su´edois ⊢np\n[/E]\na\n(np\\smain)/(np\\sppart)\n[Lex]\ngagn´e\n(np\\sppart)/np\n[Lex]\nun\nnp/n\n[Lex]\nprix\nn\n[Lex]\nNobel\nn\\n\n[Lex]\nprix, Nobel ⊢n\n[\\E]\nun, prix, Nobel ⊢np\n[/E]\ngagn´e, un, (prix, Nobel ⊢np\\sppart\n[/E]\na, gagn´e, un, prix, Nobel ⊢np\\smain\n[/E]\nUn, su´edois, a, gagn´e, un, prix, Nobel ⊢smain\n[\\E]\nFig. 3 Lambek calculus proof of ‘Un Su´edois a gagn´e un prix Nobel’ (A Swede won a\nNobel prize).\nλP e→tλQe→t∃x.[(P x) ∧(Q, x)]\nThis is the standard Montague-style analysis of a generalised quantiﬁer. It\nabstracts over two properties P and Q and states that there is an x which\nsatisﬁes these two properties. Because of our choice of np for the quantiﬁer\n(instead of a more standard higher-order type like s/(np\\s), the type for the\ntransitive verb has to take care of the quantiﬁer scope. The lexical entry for\nthe transitive verb below chooses the subject wide scope reading.\nλN (e→t)→tλM (e→t)→t(M λx.(N λy.gagner(x, y)))\nSubstituting these terms in into the lambda term for the derivation and\nnormalising the resulting term produces the following.\n∃x∃y.[su´edois(x) ∧prix Nobel(y) ∧gagner(x, y)]\nEven though this is an admittedly simple example, it is important to note\nthat, although slightly simpliﬁed for presentation here, the output for this\nexample and other examples in this paper are automatically produced by\nthe wide-coverage French parser which is part of the Grail family of theorem\nprovers [17]: Grail uses a deep learning model to predict the correct formu-\nlas for each word, ﬁnds the best way to combine these lexical entries and\nﬁnally produces a representation of a logical formula. The full Grail output\nfor the meaning of the example sentence is shown in Figure 4. Grail uses\ndiscourse representation structures [14] for its meaning representation, which\nis essentially a graphical way to represent formulas in ﬁrst-order logic. Be-\nsides providing a readable presentation of formulas, discourse representation\nstructures also provide a dynamic way of binding, with applications to the\ntreatment of anaphora in natural language.\nThe variables d0, y0 and z0 in the top part of the rightmost box represent\nexistentially quantiﬁed variables, y0 is a swede, z0 is a prize (named after\nNobel) and d0 is a variable for an eventuality — essentially denoting a slice\nof space-time, the inner box indicates that this ‘winning’ even must have\noccurred at a time before ‘maintenant’ (now).\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n21\n*8\n<\n:\nnomm´e(z0, Nobel)\n9\n=\n; ,\nd0 y0 z0\nsu´edois(y0)\nprix(z0)\ngagner(d0, y0, z0)\nd1\ntemps(d0) < temps(d1)\ntemps(d1) ◦maintenant\n+\nFig. 4 Grail output for the semantics of ‘Un Su´edois a gagn´e un prix Nobel’\nEven though the meaning assigned is in some ways simplistic, the advan-\ntage is that it can be automatically obtained and that it is of exactly the\nright form for logic-based entailment tasks.\n6 Textual Entailment\nWhat can dialogical argumentation contribute to the study of textual entail-\nment? In natural language processing, textual entailment is usually deﬁned\nas a relation between text fragments that holds whenever the truth of one\ntext fragments follows from another text. Textual entailment recognition is\nthe task of determining, given text fragments, whether the relation of textual\nentailment holds between these texts.\nOur examples below are taken form the FraCaS benchmark, but translated\ninto French; This is due to the fact that our methodology involves the use\nof Grail and the latter is developed mainly for the French language. The\nFraCaS benchmark was built in the mid 1990s; the aim was developing a\ngeneral framework from computational semantics. The data set consists of\nproblems each containing one or more statements and one yes/no-question.\nAn example taken from the date set is the following\n(1)\nA Swede won a Nobel prize.\n(2)\nEvery Swede is a Scandinavian.\n(3)\nDid a Scandinavian win a Nobel prize? [Yes]\n6.1 First Example\nWe illustrate our methodology to solve inference problem using examples.\nFirst of all we turn the question (3) into an assertion i.e.\n22\nDavide Catta, Richard Moot, Christian Retor´e\n(4)\nSome Scandinavian won a Nobel prize.\nWe then translate each sentence in french and use Grail on each sentence in\norder to get a logical formula. In the enumeration below we report, in order:\nthe sentence in English. A word-for-word translation, then a translation that\ntakes into account the grammar and idiomatic of French and, ﬁnally, the\nlogical formula that Grail outputs from the input of the latter\n(5)\nA\nUn\nswede\nsu´edois\nwon\na gagn´e\na\nun\nnobel\nnobel\nprize\nprix\nUn su´edois a gagn´e le prix Nobel\n∃x∃y.[su´edois(x) ∧prix Nobel(y) ∧gagner(x, y)]\n(6)\nEvery\nTout\nswede\nsu´edois\nis\nest\na\nun\nscandinavian\nscandinave\nTout su´edois est scandinave\n∀u.(su´edois(u) ⇒scandinave(u))\n(7)\nSome\nUn\nScandinavian\nscandinave\nwon\n`a gagn´e\na\nun\nNobel\nNobel\nprize\nprix\nUn scandinave `a gagn´e un prix Nobel\n∃w.∃z.[(scandinave(w) ∧(prix Nobel(z) ∧gagner(w, z))]\nWe then construct a winning strategy for the formula H1∧H2 . . .∧Hn ⇒C\nwhere each Hi is the logical formula that Grail associates to each statement\nfrom the data set, and C is the formula that Grail associates to the assertion\nobtained from the pair question-answer in the data-set.\nF = (∃x∃y.[su(x)∧p N(y)∧g(x, y)]∧∀u.(su(u) →sc(u))) ⇒∃w.∃z.[(sc(w)∧(p N(z)∧g(w, z))]\nIn the above formula su stands for su´edois, p N for prix Nobel, g pour\ngagner and sc for scandinave. A winning strategy for the formula F is showed\nthereafter in two steps.\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n23\n!, (∃x∃y.[su(x) ∧p N(y) ∧g(x, y)] ∧∀u.(su(u) →sc(u))) ⇒∃w.∃z.[(sc(w) ∧(p N(z) ∧g(w, z))]\n?, (∃x∃y.[su(x) ∧p N(y) ∧g(x, y)] ∧∀u.(su(u) →sc(u)))\n?, ∧1\n!, (∃x∃y.[su(x) ∧p N(y) ∧g(x, y)]\n?, ∃\n!, ∃y.[su(x0) ∧p N(y) ∧g(x0, y)]\n?, ∃\n!, su(x0) ∧p N(x1) ∧g(x0, x1)]\n?, ∧1\n!, su(x0)\n?, ∧2\n!, N(x1) ∧g(x0, x1)\n?, ∧1\n!, N(x1)\n?, ∧2\n!, g(x0, x1)\n?, ∧2\n!, ∀u.(su(u) ⇒sc(u))\n?, ∀[xo/u]\n!, su(x0) ⇒sc(x0)\n?, su(x0)\n!, sc(x0)\n∃w∃z((sc(w) ∧(N(z) ∧g(w, z)))\n24\nDavide Catta, Richard Moot, Christian Retor´e\n?, ∃\n∃z(sc(x0) ∧(N(z) ∧g(x0, z)\n?, ∃\n!, sc(x0) ∧(N(x1) ∧g(x0, x1))\n?, ∧1\n!, sc(x0)\n?, ∧2\n!, N(x1) ∧g(x0, x1)\n?, ∧1\nN(x1)\n?, ∧2\n!, g(x0, x1)\n6.2 Second Example\n(8)\nSome Irish delegates ﬁnished the survey on time.\n(9)\nDid any delegates ﬁnish the survey on time? [Yes]\nThe answer to the question is aﬃrmative. This means that if (8) is true then\nthe sentence “some delegate ﬁnished the survey on time” must also be true.\n(10)\nSome\nCertains\nIrish\nirlandais\ndelegates\nd´el´egu´es\nﬁnished\nont termin´e\nthe\nl’\nsurvey\nenquˆete\non\n`a\ntime\ntemps\nCertain d´elegu´es irlandais ont t´ermin´e l’enquˆete `a temps\n∃x∃y((d´elegu´e(x)∧irlandais(x))∧(enquˆete(y)∧termin´e-`a-temps(x, y)))\n(11)\nSome\nCertains\ndelegates\nd´el´egues\nﬁnished\nont termin´e\nthe\nl’\nsurvey\nenquˆete\non\n`a\ntime\ntemps\nCertains d´el´egues ont t´ermin´e l’enquˆete `a temps\n∃x∃y(d´elegu´e(x) ∧(enquˆete(y) ∧termin´e-`a-temps(x, y)))\nWe have that F1 ⇒F2. Where\nF1 = ∃x∃y((d´elegu´e(x)∧irlandais(x))∧(enquˆete(y)∧termin´e-`a-temps(x, y)))\nF2 = ∃x∃y(d´elegu´e(x) ∧(enquˆete(y) ∧termin´e-`a-temps(x, y)))\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n25\n∃x∃y(D(x) ∧I(x)) ∧(E(y) ∧TaT(x, y))) →∃w∃z(D(w) ∧(E(z) ∧Tat(w, z))\n∃x∃y(D(x) ∧I(x)) ∧(E(y) ∧TaT(x, y)))\n?, ∃\n∃y((D(x0) ∧I(x0)) ∧(E(y) ∧Tat(x0, y))\n?, ∃\n(D(x0) ∧I(x0)) ∧(E(x1) ∧Tat(xo, x1))\n?, ∧1\nD(x0) ∧I(x0)\n?, ∧1\n!, D(x0)\n?, ∧2\n!, E(x1) ∧Tat(xo, x1)\n?∧1\n!, E(x1)\n?, ∧2\n!, Tat(x0, x1)\n∃w∃z(D(w) ∧(E(z) ∧Tat(w, z))\n?, ∃\n∃z(D(x0) ∧(E(z) ∧Tat(x0, z))\n?, ∃\n(D(x0) ∧(E(x1) ∧Tat(x0, x1))\n?, ∧1\nD(x0)\n?, ∧2\nE(x1) ∧Tat(x0, x1)\n?, ∧1\n!, E(x1)\n?, ∧2\n!, Tat(x0, x1)\n26\nDavide Catta, Richard Moot, Christian Retor´e\n6.3 Third Example\n(12)\nNo delegate ﬁnished the report on time\n(13)\nDid any Scandinavian delegate ﬁnished the report on time? [No]\nIn this example the answer get a negative reply. A positive answer would be\nimplied by the existence of a Scandinavian delegate who ﬁnished the report in\nthe time allotted. Thus the sentence (8) plus the sentence Some Scandinavian\ndelegate ﬁnished the report on time should imply a contradiction. We ﬁrst\ntranslate the two sentences in French and use Grail to get the corresponding\nlogical formulas.\n(14)\nNo\nAucun\ndelegate\nd´el´egu´e\nﬁnished\nn’a termin´e\nthe\nle\nreport\nrapport\non\n`a\ntime\ntemps\nAucan d´el´egu´e n’a termin´e le rapport `a temps\n∀x(d´el´egu´e(x) ⇒¬termin´e-le rapport-`a-temps(x))\n(15)\nSome\nUn\nScandinavian\nscandinave\ndelegate\nd´elegu´e\nﬁnished\na termin´e\nthe\nle\nreport\nrapport\non\n`a\ntime\ntemps\nun d´el´egu´e scandinave a termin´e le rapport `a temps\n∃x((d´el´egue(x) ∧scandinave(x)) ∧t´ermine-le-rapport-a-temps(x))\nThe two formulas\nF1 = ∀x(d´el´egu´e(x) ⇒¬termin´e-le rapport-`a-temps(x))\nF2 = ∃x((d´el´egue(x) ∧scandinave(x)) ∧t´ermine-le-rapport-a-temps(x))\nAre contradictory. So it exists a winning strategy for the formula ¬(F1∧F2)\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n27\n¬((∀x(D(x) ⇒¬Trt(x)) ∧(∃y((D(y) ∧Sc(y)) ∧Trt(y)))\n(∀x(D(x) ⇒¬Trt(x)) ∧(∃y((D(y) ∧Sc(y)) ∧Trt(y))\n?, ∧2\n!, ∃y((D(y) ∧Sc(y)) ∧Trt(y))\n?, ∃\n(D(w) ∧Sc(w)) ∧Trt(w)\n?, ∧1\n!, ∀x(D(x) ⇒¬Trt(x))\n?, ∀[w/x]\n!, D(w) ⇒¬Trt(w)\n?, ∧1\n!, D(w) ∧Sc(w)\n?, ∧1\n!, D(w)\n?, ∧2\n!, Trt(w)\n?, D(w)\n!, ¬Trt(w)\n?, Trt(w)\n28\nDavide Catta, Richard Moot, Christian Retor´e\n6.4 Fourth Example\nIn the last example we focus on a series of sentences that our system should\nnot solve, because the question asked neither has a positive nor a negative\nanswer.\n(16)\nA Scandinavian won a Nobel prize.\n(17)\nEvery Swede is a Scandinavian\n(18)\nDid a Swede win a Nobel prize? [Don’t know]\nThis means that, on the basis of the information in our possession, we can\nneither say that a Swede has won a Nobel Prize nor that there are no Swedes\nwho have won a Nobel Prize.\n(19)\nA\nUn\nScandinavian\nscandinave\nwon\na gagn´e\na\nun\nNobel\nNobel\nprize\nprix\nUn scandinave `a gagne un prix Nobel\n∃x∃y(scandivane(x) ∧(prix Nobel(y) ∧gagne(x, y)))\n(20)\nEvery\nTout\nswede\nsu´edois\nis\nest\na\nun\nscandinavian\nscandinave\nTout su´edois est scandinave\n∀u.(su´edois(v) ⇒scandinave(v))\nCall the formula in (19) F1 and the formula in (20) F2. In dialogical logic\nterms the fact that we do not have enough information neither to answer in\na positive fashion nor in a negative fashion to the question (16), means that\nthere is no winning strategy neither for the formula F1 ∧F2 ⇒F3 nor for the\nformula F1 ∧F2 ⇒¬F3 where the formula F3 is\nF3 = ∃w∃z(su´edois(w) ∧(prix Nobel(z) ∧gagne(w, z)))\nIn general given a sentence F of ﬁrst order logic there it is not decidable\nwhether F is valid. However in some cases we can manage this problem.\nLuckily the present case is one of those we can manage. We consider how a\nwinning strategy for the formula F1 ∧F2 →F3 must look like. A winning\nstrategy S for this formula will necessarily contain a dialog whose last move\nMn is a P-move that asserts su´edois(t) for some term t in the language. Since\nsu´edois(t) is an atomic formula by proposition 3 above su´edois(t) must occur\nboth as a positive and negative gentzen sub-formula of F1 ∧F2 ⇒F3 but this\nis not the case. Thus there is no winning strategy for the latter formula.\nLet us now discuss why there is no winning strategy for the formula F1∧F2 ⇒\n¬F3. First of all proposition 1 assures us that each game won by P ends by\nthe assertion of some atomic formula and that such assertion is a P-move. By\nproposition 3 above the only candidate for this is again su´edois(t) for all term\nt in the language. If the move P Mk is an assertion of su´eduois(t) then it must\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n29\nbe an attack. Suppose is not the case then it should be a defence. This means\nthat that there is a formula F of the form ∀wsu´edois(w) or ∃w(su´edois(w))\nor F ′ ∨su´edois(w) or F ′ ∧su´edois(w) or F ′ ⇒su´edois(t) that P asserts\nF. This imply that such formula F must be positive Gentzen-subformula of\nF1 ∧F2 ⇒¬F3. But not suchformula exists. Thus the move Mn asserting\nsu´edois(t) must be an attack. Since the only formula that can be attacked by\nthis means is the is the formula su´edois(t) ⇒scandinave(t). O can answer\nback by asserting scandinave(t) thus P cannot win the game. Thus there is\nno winning strategy for the formula F1 ∧F2 ⇒¬F3\n7 Conclusion\nIn this paper, we adapted our simple version of argumentative dialogues and\nstrategies of [5] to two-sided sequents (hypotheses and conclusions): this point\nof view better matches natural language statements, because the assumptions\nsentences of a textual entailment task can be viewed as sequent calculus\nhypotheses, while the text conclusion can be viewed as the conclusion of the\nsequent.\nIn the present paper, we successfully use the syntactic and semantic plat-\nform Grail to “translate” natural language sentences into DRS that can be\nviewed as logical formulas.\nThis lead us closer to inferentialist semantics: a sentence S can be inter-\npreted as all argumentative dialogues in natural language whose conclusion is\nS — under assumptions corresponding to word meaning and to the speaker\nbeliefs.\nWe are presently working to extend our work with semantics taking place\nin classical ﬁrst order logic to a broader setting in which semantics takes\nplace in modal logic. Indeed, modal reasoning is rather common in natural\nlanguage argumentation.\nRegarding the architecture of our model of natural language argumenta-\ntion we would like to encompass lexical meaning as axioms along the lines of\n[5] and to use hypotheses to model the way the two speakers diﬀer in their\nexpectations, beliefs and knowledge, taking insights from existing works on\nfunctional roles in dialogue modelling.\nReferences\n1. Abramsky, S., McCusker, G.: Game semantics. In: U. Berger, H. Schwichtenberg (eds.)\nComputational Logic, pp. 1–55. Springer Berlin Heidelberg, Berlin, Heidelberg (1999)\n2. Brandom, R.: Articulating Reasons: An Introduction to Inferentialism. Harvard Uni-\nversity Press (2000)\n30\nDavide Catta, Richard Moot, Christian Retor´e\n3. Casteln´erac, B., Marion, M.: Arguing for inconsistency: Dialectical games in the\nacademy. In: G. Primiero (ed.) Acts of Knowledge: History, Philosophy and Logic.\nCollege Publications (2009)\n4. Casteln´erac, B., Marion, M.: Antilogic. The Baltic International Yearbook of Cogni-\ntion, Logic and Communication 8(1) (2013). DOI 10.4148/1944-3676.1079\n5. Chatzikyriakidis, S., Pasquali, F., Retor´e, C.: From logical and linguistic generics to\nHilbert’s tau and epsilon quantiﬁers. IfCoLog Journal of Logics and their Applications\n4(2), 231–255 (2017)\n6. Cooper, R., Crouch, D., Eijck, J.V., Fox, C., Genabith, J.V., Jaspars, J., Kamp, H.,\nMilward, D., Pinkal, M., Poesio, M., Pulman, S., Briscoe, T., Maier, H., Konrad, K.:\nUsing the framework (1996). FraCaS deliverable D16\n7. Cozzo, C.: Meaning and Argument: A Theory of Meaning Centred on Immediate\nArgumental Role. Stockholm Studies in Philosophy. Almqvist & Wiksell International\n(1994)\n8. Dummett, M.A.E.: What is a theory of meaning? In: S. Guttenplan (ed.) Mind and\nLanguage. Oxford University Press (1975)\n9. Dummett, M.A.E.: The Logical Basis of Metaphysics. Harvard University Press (1991)\n10. Felscher, W.: Dialogues as a foundation for intuitionistic logic.\nIn: D.M. Gabbay,\nF. Guenthner (eds.) Handbook of Philosophical Logic, pp. 115–145. Springer Nether-\nlands, Dordrecht (2002).\nDOI 10.1007/978-94-017-0458-8 2.\nURL http://dx.doi.\norg/10.1007/978-94-017-0458-8_2\n11. Francez, N.: Proof Theoretical Semantics, Studies in Logic, vol. 57. College Publication\n(2015)\n12. Herbelin, H.: S´equents qu’on calcule : de l’interpr´etation du calcul des s´equents comme\ncalcul de λ-termes et comme calcul de strat´egies gagnantes. Th`ese d’universit´e, Uni-\nversit´e Paris 7 (1995)\n13. Hyland, M.: Game semantics. In: A. Pitts, P. Dybjer (eds.) Semantics and Logics of\nComputation, pp. 131–182. Cambridge University Press (1997)\n14. Kamp, H., Reyle, U.: From Discourse to Logic. Kluwer Academic Publishers, Dordrecht\n(1993)\n15. Lorenzen, P., Lorenz, K.: Dialogische Logik. Wissenschaftliche Buchgesellschaft (1978).\nURL https://books.google.fr/books?id=pQ5sQgAACAAJ\n16. Moot, R.: A type-logical treebank for french. Journal of Language Modelling 3(1),\n229–264 (2015). DOI http://dx.doi.org/10.15398/jlm.v3i1.92. URL http://dx.doi.\norg/10.15398/jlm.v3i1.92\n17. Moot, R.: The Grail theorem prover: Type theory for syntax and semantics.\nIn:\nS. Chatzikyriakidis, Z. Luo (eds.) Modern Perspectives in Type Theoretical Semantics,\npp. 247–277. Springer (2017).\nDOI https://doi.org/10.1007/978-3-319-50422-3 10.\nURL https://doi.org/10.1007/978-3-319-50422-3_10\n18. Moot, R.: The Grail family of theorem provers (syntactic and semantic parser) (2018).\nURL https://richardmoot.github.io. https://richardmoot.github.io\n19. Moot, R., Retor´e, C.: Natural language semantics and computability.\nJournal of\nLogic, Language and Information 28, 287–307 (2019).\nURL https://doi.org/10.\n1007/s10849-019-09290-7\n20. Novaes, C.D.: Medieval ”obligationes” as logical games of consistency maintenance.\nSynthese 145(3), 371–395 (2005). URL http://www.jstor.org/stable/20118602\n21. Prawitz, D.: The epistemic signiﬁcance of valid inference.\nSynthese 187(3), 887–\n898 (2012).\nDOI 10.1007/s11229-011-9907-7.\nURL https://doi.org/10.1007/\ns11229-011-9907-7\n22. Retor´e, C.: The Montagovian Generative Lexicon ΛTyn: a Type Theoretical Frame-\nwork for Natural Language Semantics. In: R. Matthes, A. Schubert (eds.) 19th Inter-\nnational Conference on Types for Proofs and Programs (TYPES 2013), Leibniz Inter-\nnational Proceedings in Informatics (LIPIcs), vol. 26, pp. 202–229. Schloss Dagstuhl–\nLeibniz-Zentrum fuer Informatik, Dagstuhl, Germany (2014). DOI 10.4230/LIPIcs.\nTYPES.2013.202. URL https://doi.org/10.4230/LIPIcs.TYPES.2013.202\nLogical Semantics, Dialogical Argumentation, and Textual Entailment\n31\n23. Troelstra, A.S., Schwichtenberg, H.: Basic Proof Theory. Cambridge University Press,\nUSA (1996)\n24. Wittgenstein, L.: Philosophische Untersuchungen / Philosophical Investigations. Ox-\nford University Press (1953). Translated by G. E. M. Anscombe / Bilingual edition.\n",
  "categories": [
    "cs.CL"
  ],
  "published": "2020-08-17",
  "updated": "2020-08-17"
}