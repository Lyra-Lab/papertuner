{
  "id": "http://arxiv.org/abs/2101.11436v1",
  "title": "Challenges Encountered in Turkish Natural Language Processing Studies",
  "authors": [
    "Kadir Tohma",
    "Yakup Kutlu"
  ],
  "abstract": "Natural language processing is a branch of computer science that combines\nartificial intelligence with linguistics. It aims to analyze a language element\nsuch as writing or speaking with software and convert it into information.\nConsidering that each language has its own grammatical rules and vocabulary\ndiversity, the complexity of the studies in this field is somewhat\nunderstandable. For instance, Turkish is a very interesting language in many\nways. Examples of this are agglutinative word structure, consonant/vowel\nharmony, a large number of productive derivational morphemes (practically\ninfinite vocabulary), derivation and syntactic relations, a complex emphasis on\nvocabulary and phonological rules. In this study, the interesting features of\nTurkish in terms of natural language processing are mentioned. In addition,\nsummary info about natural language processing techniques, systems and various\nsources developed for Turkish are given.",
  "text": " \n \n - REVIEW  ARTICLE- \n \n \nChallenges Encountered in Turkish Natural Language Processing Studies  \nKadir Tohma*, Yakup Kutlu \nIskenderun Technical University, Faculty of Engineering, Department of Computer \nEngineering, Hatay, TURKEY \nAbstract \nNatural language processing is a branch of computer science that combines artificial \nintelligence with linguistics. It aims to analyze a language element such as writing or \nspeaking with software and convert it into information. Considering that each language has \nits own grammatical rules and vocabulary diversity, the complexity of the studies in this field \nis somewhat understandable. For instance, Turkish is a very interesting language in many \nways. Examples of this are agglutinative word structure, consonant/vowel harmony, a large \nnumber of productive derivational morphemes (practically infinite vocabulary), derivation \nand syntactic relations, a complex emphasis on vocabulary and phonological rules. In this \nstudy, the interesting features of Turkish in terms of natural language processing are \nmentioned. In addition, summary info about natural language processing techniques, systems \nand various sources developed for Turkish are given. \nKeywords:  \nNatural language processing, Turkish natural language processing, NLP \n \nArticle history: \nReceived  06 June 2020, Accepted 26 November 2020, Available online 27 November 2020 \n \nIntroduction \nLanguage is undoubtedly the main factor in communication between people. Natural \nlanguage processing studies aim at the most effective use of language factor in human-\ncomputer communication. Natural Language Processing is a subcategory of artificial \nintelligence and linguistics. It aims to analyze, understand or reproduce the canonical \nstructure of natural languages This analysis can be summarized under many headings, such as \nautomatic translation of written documents, question-answer machines, automatic speech and \n                                                 \n* Corresponding Author: Kadir Tohma, E-mail: kadir.tohma@iste.edu.tr \nNESciences, 2020, 5(3): 204-211 \n \nDoi: 10.28978/nesciences.833188 \nNatural and Engineering Sciences                       \n205 \n                                                                                         \n \n \n   \ncommand recognition, speech synthesis, speech generation, automatic text summarization, \nand information provision. The problems encountered when speaking with each language \nrules are much less common. But in the real world, everyday language falls outside the rules \nof existing language. Language rules are general. However, the usage style varies from region \nto region. Trained computers are as important as knowing the language rules to be able to \ncatch these changes or to be able to master daily speaking language. In Turkish, such cases \nare frequently encountered. For example, three different sentences with the same meaning can \nbe written in Turkish. Turkish has this flexibility due to the suffixes the words take. The \nflexible structure is due to the fact that Turkish is an adjacent language. We cannot speak of \nflexibility for a non-adjacent language. It is difficult to say that grammar rules and \npunctuation are used correctly in all the articles we write or encounter in our daily life. \nTurkish is also a difficult language in this respect (Oflazer, 2014). There have been many \nstudies on natural language processing but it is not possible to directly transfer the results of \nthese studies or the tools that emerged in these studies into Turkish. This showed that Turkish \nnatural language processing studies should be focused on. \nStructurally, Turkish has features that have interesting problems in natural language \nprocessing. In Turkish, the number of different words in which a word can be converted by \nsuffixes is theoretically infinite. The reason why Turkish is studied in almost every linguistics \ntextbook is that the Turkish language is a typical example in a number of grammatical \nphenomena; For example, vocal harmony, agglutinative word structure, syntactic ease. And \nin phrase structures, genitival always precede determined words. The word structure of \nTurkish is based on adding derivational affixes and inflectional suffixes to the roots as \npostfixes. The richness of inflectional suffixes, the productivity of derivational affixes and \nthe direct effect of postfixes on syntax produce interesting results in computerized morpheme \nanalysis (Adalı, 2012). In Turkish, the number of different words that a word can be \nconverted with the help of suffixes is theoretically infinite (Gündoğdu et al., 2016). Turkish \nis a free language with adjacent and sentence element sequences. Therefore, sentence analysis \nis more complex than Indo-European languages (Eryiğit, 2006). \nIn this study, the difficulties and differences of Turkish in terms of natural language \nprocessing are mentioned and a review of the natural language processing techniques, \nsystems and studies developed for Turkish is presented. \nLinguistics and Natural Language Processing \nAdvances in information technologies have given an important pace to computational linguistics \nstudies. This new field of science, which is called Natural Language Processing (NLP), was first \nstarted with the aim of using natural languages in human-computer interaction, and gradually \nbecame computerized language science. The transfer of data and results in memory to people by \nspeaking a natural language is called ''speech'' and the entries made to the computer by people \nthrough speaking are called ''speech recognition\". In order for a computer to understand human \nspeech and to interact with people by speaking in a language that a human can understand, the \ncomputer needs to know all the features of the language. In other words, all the features of the \nlanguage must be taught to the computer. Therefore, IT specialists working in the field of NLP \nhave started to evaluate the features of languages from their own point of view. In this context, \nstudies on four main subjects, especially phonology, morphology, syntax and semantics, have \nNatural and Engineering Sciences                       \n206 \n                                                                                         \n \n \n   \nbeen focused on. Linguists work on these four main issues that make up the structure of language \nand try to reveal the features and rules of language. Parallel to these studies, they examine the \nevolution of language over time. IT specialists working in the field of natural language try to \nprocess the language with the help of computer by using the results of linguists. For example, \nthey try to find and correct spelling errors in a written text by using phonology and morphology \nfeatures of Turkish. They try to develop inter-linguistic translation tools using the grammar rules \nof two languages, determined by linguists. According to a linguist, the richness of agglutinative \nlanguages is a positive feature for these languages, while it is a difficult but interesting issue for \nIT specialists to solve. As can be seen from these examples, linguists try to define the \ncharacteristics and structures of languages scientifically, while IT specialists interested in natural \nlanguage processing and try to help people through computers. Today, linguists and IT specialists \nworking in the field of natural language processing work separately and occasionally work \ntogether on specific topics. It is clear that working together will yield more productive results. \nBecause one uses the results defined by the other. In order to work together, linguists need to \nfocus on information technologies and IT specialists need to focus on linguistics. \nMorphological Structure of Turkish \n \nIn terms of morphology, Turkish is an agglutinative language. There is no prefix in Turkish. \nAlso, as in German, there is no combination of names that are written together by adding a series \nof noun roots. Compound words are often used for meanings that are much different from the \nsum of their meanings. In Turkish, words are created by adding a series of suffixes to \napproximately 20,000 root words in a very productive way. Nouns are not divided into classes as \nin German and French. The vocabulary has been influenced by Arabic, Persian, Greek, \nArmenian, French, Italian, German and English over time due to historical, geographical and \neconomic reasons. When used in a sentence, the words take a series of suffix. The presence of \nderivational affixes in Turkish words is frequently encountered. Such words can sometimes have \na very complex structure. Since Turkish is an agglutinative language, words that have different \nmeanings can be derived from a root. \n \nStudies on Turkish Natural Language Processing \n \nStudies on Turkish natural language processing have started to increase especially in recent years. \nThe studies focused on the topics mentioned in the areas of natural language processing. For \nexample, Kılıçarslan and his friends developed a software tool to help the education and training \nof children with intellectual disabilities and autism. With the help of this tool, it is aimed to help \nchildren with disabilities to make connections between expressions and the corresponding \nconcepts. Natural Language Processing (NLP) modules have been used with the fact that it is \nbetter to ensure that the user's relationship with the system is established with natural language \nexpressions, rather than limiting them to keywords (Kılıçaslan et al., 2006). In the studies of \nTopçu et al., a Turkish speaking system was developed for chat purposes. The system works \nusing AIML technology. The developed system has the feature of receiving information from the \nuser, forwarding the chat, using the information of the user with his own sentences. When \ndesigning the system, the language used was Turkish, which caused some problems. As a result, \nthe fact that Turkish is an agglutinative language and that verbs have a large number of suffixes \nincreases the response time. To solve this problem, the morphological analysis of user inputs is \nNatural and Engineering Sciences                       \n207 \n                                                                                         \n \n \n   \nconsidered (Topçu et al., 2012). In the studies of Dönmez et al., the concepts and phrases were \nemphasized, the effect of the voice suffixes was discussed and the subject of valid/invalid \npredicates was examined. The methods suitable for sentence structure have been studied by \nconsidering predicate types. The effect of tense suffixes and personal endings on natural language \nprocessing is emphasized. Ambiguity events were examined and compared with Google \ntranslation. As a result, it was observed that this study achieved 68% success (Dönmez et al., \n2012). In the studies of Ergün et al., a system that automatically evaluates comments about a \nproduct is introduced by using text mining techniques. The data were first subjected to \nmorphological analysis. In the texts, words indicating many product features and positive \nnegative adjectives were determined. In order to determine the qualifier words, a tree structure \nwas created according to the Turkish grammar rules. A software was developed using the Depth \nFirst Search algorithm on the tree structure. As a result of running the software, the data obtained \nwere recorded in the SQL database. When the data is questioned according to any feature of the \nproduct, numerical information expressing the degree of satisfaction about that feature is obtained \nand interpreted (Ergün et al., 2000). In the study of Coşkun, focused on topics such as word order \nand sentence structures of the natural language. In addition, the elements of sentences are \nmentioned, the rule of coexistence of words is used to distinguish the elements from each other \nand methods are developed. The developed method has been tested in different fields. As a result \nof the test, it has been determined that the success of the method varies according to the correct \nanalysis of the words in the sentence and the sentence types. It is important that the types of \nwords are found correctly for the accuracy of namesets. Another conclusion is that the success of \nrule-based systems is higher in simple sentences (Coşkun 2013). Named entity recognition is \noften described as the automatic discovery of the names of people, places and institutions in the \nnatural language. In the studies of Küçük et al., a large list of human names was collected \nthrough Wikipedia. Afterwards, with this list, a Wikipedia-based named entity recognition \nsystem was developed for Turkish by using the lists of people, places and institutions obtained \nfrom Turkish Wikipedia and a Turkish rule-based system. The system has been tested on several \ndatasets and has achieved successful results (Küçük et al.,2016). Morphological analysis is the \npreliminary stage of the studies to be done with Natural Language Processing. In the studies of \nÇakıroğlu et al., it was emphasized that morphological analysis should have effective \nperformance. In addition, it focuses on methods for detecting and correcting typos. Besides, \ncorrection methods were examined for nominative words. As a result, the system achieved 71% \nerror correction and 98% correct word proposition (Çakıroğlu et al., 2006). \n \nNamed entity Recognition is one of the most important research topics in areas such as \nNatural Language Processing, Data Extraction and Data Mining. This issue is still the subject of \nresearch for agglutinative languages. In the study of Güneş et al., artificial neural network \nstructure has been handled in different ways for the named entity problem in Turkish, compared \nwith previous studies and achieved success of 93.69% (Güneş et al., 2018). Text Generation is \none of the technologies that deal with the field of Natural Language Production, which is one of \nthe most important sub-branches of Natural Language Processing. It can be used for purposes \nsuch as producing new texts from an existing one, producing similar texts on different subjects, \nand creating new texts with the same title. Kutlugun et al., based on their previous studies, \nconcluded that it was not sufficient to analyze natural language using a single method. And they \nproduced new texts with using two different patterns. Also, in this study, the sentence structure of \nTurkish was examined and word types were determined. The position of the words in the \nNatural and Engineering Sciences                       \n208 \n                                                                                         \n \n \n   \nsentence was dealt with, the elements of the sentence were determined and new sentences were \nproduced. As a result, more meaningful texts were produced by using a small number of \nsentences, and system performance were observed at the highest level (Kutlugün et al., 2018). In \nthe studies of Berk et al., a collection of Turkish text with verb expressions having more than one \nword was put forward. Verb expressions that have more than one word in the collection are \ndivided into subgroups. In the study, a new Turkish test collection was created considering the \nlabelling rules stated in the “parseme” Joint Study 1.0 This collection was created by bringing \ntogether articles and columns in many fields. The collection is intended to be an effective \nresource for machine experience, n-gram based language modelling, and syntactic divergence \n(Berk et al., 2018). The determination of different emotions in a text together with the assets they \naffect is called Target Based Emotion Analysis. In the studies of Çetin et al., studies on Turkish \nTarget Emotion Analysis were included. In this study, which was evaluated by using ABSA 2016 \ncompetitions and Turkish restaurant comments, an algorithm based on conditional random fields \nusing natural language processing outputs and word vectors for determining the target category, \ntarget term and two cases together was designed. And it was concluded that all three tasks were \nsolved in one step. The data obtained from the study revealed that it was the most successful \nstudy among similar studies conducted so far. Achievements were 66.7% for target category, \n53.2% for target terms and 47.7% for both cases (Çetin et al., 2018). \n \nA study on correcting typos in Turkish was done by Kemal Oflazer and Cemalettin \nGüzey. This study stands on a two-phased morphological analysis and a search algorithm based \non dynamic programming. In this study on correcting typos, the problem was evaluated under \ntwo main headings. The first step is to find all candidate roots from the dictionary for the \nmisspelled word. The difficult point here is to decide whether the roots are changed as a result of \nmisspelling or by phonetic changes. The second step is the main part of the problem; this is to \nderive all possible words from all candidate roots found. To achieve this, the method of finding \nthe distance between two words, known as ''edit distance metric '' was used. In this study, “q \ngram” method was used to find out how similar the two words are. According to the test results, \nthe correction of a misspelled word is performed with 95% success (Güzey et al., 1994, Oflazer, \n1993). Another study on the finding of misspelled words in Turkish was conducted by Rıfat \nAşliyan, Korhan Günel and Tatyana Yakhno. The aim of this study is to determine whether the \nwords in a Turkish text are written correctly or not. The system takes the words in the Turkish \ntext as input and calculates the probability distribution using the “n-gram frequency” method. If \nthe probability distribution of a word is zero, it is judged that the word is misspelled. In order to \ntest the system, two different databases of a text containing the same words were prepared. One \nof them contains 685 misspelled words. The other one contains 685 correctly written words. The \nsystem's performance in finding misspelled words is 97% (Aşliyan et al., 2007). One of the few \nspell checking tools developed for Turkish was made by Ayşin Solak and Kemal Oflazer. The \ndictionary used by this software contains 23.000 words. Each root word in the dictionary is \nmarked with flags symbolizing the word's properties. Any word in the dictionary can be marked \nwith 64 different flags. But, 41 of these flags were used in the developed software. Root finding \nalgorithm is based on the dictionary search process. According to this algorithm, if the word is \nsearched and found in the dictionary, it means that there are no affixes; therefore there is no need \nto analyze. If the word is not in the dictionary, a letter is removed from the right of the word and \nthe rest of the word is searched in the dictionary. This process continues until the word is found \nin the dictionary.  If the first letter of the word is reached and the root is not found in the \nNatural and Engineering Sciences                       \n209 \n                                                                                         \n \n \n   \ndictionary that means the word is misspelled (Oflazer et al.,1992, Solak et al., 1991).  \nÖzyurt et al. developed a basic and simple Turkish dialogue based dialogue system in their \nstudies (Ozyurt et al.). Amasyalı et al. prepared a new and simple question-answering system \ncalled baybilmiş in their studies. A This study has many examples for English but a first for \nTurkish Internets question answering system was implemented (Amasyali et al., 2005). \nGündoğdu et al. studied the Methods Used in Turkish Text Summarization. The difficulties \nencountered in this study were also due to the fact that the Turkish language has a different origin \nand grammatical structure from the English language. and it was emphasized that different \nsolutions should be found in terms of solutions (Gündoğdu et al., 2016). In addition, many \nstudies have mentioned the structural and semantic difficulties of Turkish (Yeniterzi et al., 2010, \nYuret et al., 2006, Sak et al., 2011, Oyucu et al.,2020, Şahin et al., 2018, Saygili et al., 2017, \nPolat et al., 2020, Ali et al., 2020, Eryigit et al., 2008). \n \nConclusion \n \nNowadays, most of the studies in the field of natural language processing are conducted in \nEnglish as it is a valid language everywhere in science and business. Although theoretical studies \nhave been conducted in the field of natural language processing on the Turkish language, the \nnumber of studies conducted in practice is quite limited. Despite being the native language of \nover 60 M speakers in a wide geography, Turkish has been a relative late-comer into natural \nlanguage processing and the development of tools and resources for Turkish natural language \nprocessing has only been attempted in the last two decades. Therefore, more studies are needed to \nestablish a research infrastructure in Turkish. Turkish is spoken as a native language by millions \nof people in a wide geography. However, natural language processing studies on the Turkish \nlanguage accelerated only in 10-15 years. Although Turkish has led to some very interesting \nproblems for language processing due to its specific characteristics detailed in the this study, it \nhas been observed that the solutions obtained for them can be adapted to a much wider set of \nlanguages when adequately isolated. Even though a number of sources have been developed for \nthe Turkish Language over time, there are still some obstacles and deficiencies. In future studies, \ntaking into account such deficiencies, a new application based on interactive and deep learning \nwill be developed using Turkish natural language processing techniques.   \n \nReferences \nAdalı, E. (2012). Doğal Dil İşleme. Türkiye Bilişim Vakfı Bilgisayar Bilimleri ve Mühendisliği \nDergisi, 5(2). \nAli, C. B., Haddad, H., & Slimani, Y. (2019). Empirical evaluation of compounds indexing for \nturkish texts. Computer Speech & Language, 56, 95-106. \nAmasyalı, M. F., & Diri, B. (2005). Bir soru cevaplama sistemi: Baybilmiş. Türkiye Bilişim \nVakfı Bilgisayar Bilimleri ve Mühendisliği Dergisi, 1(1). \nAşliyan, R., Günel, K., & Yakhno, T. (2007, December). Detecting misspelled words in Turkish \ntext using syllable n-gram frequencies. In International Conference on Pattern \nRecognition and Machine Intelligence (pp. 553-559). Springer, Berlin, Heidelberg. \nNatural and Engineering Sciences                       \n210 \n                                                                                         \n \n \n   \nBerk, G., Erden, B., & Güngör, T. (2018). Turkish verbal multiword expressions corpus. In 2018 \n26th Signal Processing and Communications Applications Conference (SIU) (pp. 1-4). \nIEEE. \nÇakıroğlu, Ü., & Özyurt, Ö. (2006). Türkçe Metinlerdeki Yazım Yanlışlarına Yönelik Otomatik \nDüzeltme Modeli. Elektrik-Elektronik-Bilgisayar Mühendisliği Sempozyumu ve Fuarı \n(Eleco 2006), BURSA, TÜRKIYE, ss.7-9 \nÇetin, F. S., & Eryiğit, G. (2018). Türkçe Hedef Tabanlı Duygu Analizi İçin Alt Görevlerin \nİncelenmesi–Hedef Terim, Hedef Kategori Ve Duygu Sınıfı Belirleme. Bilişim \nTeknolojileri Dergisi, 11(1), 43-56. \nCoşkun, N. (2013). Türkçe Tümcelerin Öğelerinin Bulunması(Doctoral dissertation, Fen \nBilimleri Enstitüsü). \nDönmez, İ., & Adalı, E. (2015). Türkçe Tümce Çözümlemede Vektör Yaklaşımı. Afyon \nKocatepe Üniversitesi Fen Ve Mühendislik Bilimleri Dergisi, 15(3), 1-11. \nErgün, K., Kubat, C., Çağıl, G., & Cesur, R. (2000). İnternet ortamındaki tüketici yorumlarından \nözet bilgi çıkarımı. Sakarya University Journal of Science, 17(1), 33-40. \nEryiğit, G. (2006). Türkçe’nin bağlılık ayrıştırması (Doctoral dissertation). \nEryiğit, G., Nivre, J., & Oflazer, K. (2008). Dependency parsing of Turkish. Computational \nLinguistics, 34(3), 357-389. \nGündoğdu, Ö. E., & Duru, N. (2016). Türkçe Metin Özetlemede Kullanılan Yöntemler. 18. \nAkademik Bilişim Konferansı-AB'16. \nGüneş, A., & TantuĞ, A. C. (2018). Turkish named entity recognition with deep learning. \nIn 2018 26th Signal Processing and Communications Applications Conference \n(SIU) (pp. 1-4). IEEE. \nGüzey, C. ve Oflazer, K., 1994. Spelling Correction in Agglutinative Languages, Bilkent \nUniversity Department Of Computer Engineering and Information Systems Technical \nReport, BU-CEIS-94-01, Ankara, Turkey.  \nKılıçaslan, Y., Özlem, U. Ç. A. R., Güner, E. S., & Kemal, B. A. L. (2006).Otistik Ve Zihinsel \nEngelli Çocuklar İçin Doğal Dil İşleme Tabanlı Bir Yardım Aracı: Bir Başlangıç \nÇalışması. Trakya Üniversitesi Fen Bilimleri Dergisi, 7(2), 101-108. \nKüçük, D., & Arıcı, N. (2016). Türkçe için Wikipedia Tabanlı Varlık İsmi Tanıma \nSistemi. Politeknik Dergisi, 19(3), 325-332. \nKutlugün, M. A., & Şirin, Y. (2018). Turkish meaningful text generation with class based n-gram \nmodel. In 2018 26th Signal Processing and Communications Applications Conference \n(SIU)(pp. 1-4). IEEE. \nOflazer, K. ve Solak, A., 1992. Parsing Agglutinative Word Structures And Its Application to \nSpelling Checking for Turkish, In Proceedings of the 15thInternational Conference On \nComputational Linguistics, Nantes, France, August 23-28, p. 39-45. \nNatural and Engineering Sciences                       \n211 \n                                                                                         \n \n \n   \nOflazer, K., 1993. Two-level Description Of Turkish Morphology, In Proceedings of the Sixth \nConference Of The Europen Chapter Of The Assotiation For Computational Linguistics, \nUtrecht, Netherlands, April 1993. \nOflazer, K. (2014). Turkish and its challenges for language processing. Language resources and \nevaluation, 48(4), 639-653. \nOyucu, S., Sever, H., & Polat, H. (2019). Overview of automatic speech recognition, approaches \nand challenges: Way the future to Turkish speech recognition. Gazi Univ. Sci. J. Part C \nDes. Technol, 7, 834-854. \nOzyurt, O., & Kose, C. Türkçe Tabanlı Diyalog Sistemi Tasarimi ve Kodlanmasi \nPolat, N., Mahalingappa, L., & Mancilla, R. L. (2020). Longitudinal growth trajectories of \nwritten syntactic complexity: The case of Turkish learners in an intensive English \nprogram. Applied Linguistics, 41(5), 688-711. \nSak, H., Güngör, T., & Saraçlar, M. (2011). Resources for Turkish morphological \nprocessing. Language resources and evaluation, 45(2), 249-261. \nSaygılı, N. Ş., Amghar, T., Levrat, B., & Acarman, T. (2017, May). Taking advantage of Turkish \ncharacteristic features to achieve authorship attribution problems for Turkish. In 2017 \n25th Signal Processing and Communications Applications Conference (SIU) (pp. 1-4). \nIEEE. \nSolak, A., (1991). Design And Implementation of A Spelling Checker For Turkish, M.S. Thesis, \nBilkent University, Ankara. \nŞahin, G. G., & Adalı, E. (2018). Annotation of semantic roles for the Turkish proposition \nbank. Language Resources and Evaluation, 52(3), 673-706. \nTopçu, S., Şen, C., Amasyalı, M.F,.(2012). Türkçe Sohbet Robotu. Akıllı Sistemler ve \nUygulamaları, ASYU. \nYeniterzi, R., & Oflazer, K. (2010, July). Syntax-to-morphology mapping in factored phrase-\nbased statistical machine translation from English to Turkish. In Proceedings of the 48th \nannual meeting of the association for computational linguistics (pp. 454-464). \nYuret, D., & Türe, F. (2006, June). Learning morphological disambiguation rules for Turkish. \nIn Proceedings of the Human Language Technology Conference of the NAACL, Main \nConference (pp. 328-334). \n",
  "categories": [
    "cs.CL",
    "cs.AI"
  ],
  "published": "2021-01-21",
  "updated": "2021-01-21"
}