{
  "id": "http://arxiv.org/abs/2102.02204v1",
  "title": "Parametrized Quantum Circuits of Synonymous Sentences in Quantum Natural Language Processing",
  "authors": [
    "Mina Abbaszadeh",
    "S. Shahin Mousavi",
    "Vahid Salari"
  ],
  "abstract": "In this paper, we develop a compositional vector-based semantics of positive\ntransitive sentences in quantum natural language processing for a non-English\nlanguage, i.e. Persian, to compare the parametrized quantum circuits of two\nsynonymous sentences in two languages, English and Persian. By considering\ngrammar+meaning of a transitive sentence, we translate DisCoCat diagram via\nZX-calculus into quantum circuit form. Also, we use a bigraph method to rewrite\nDisCoCat diagram and turn into quantum circuit in the semantic side.",
  "text": "Abbaszadeh et al.\nRESEARCH\nParametrised Quantum Circuits of Synonymous\nSentences in Quantum Natural Language\nProcessing\nMina Abbaszadeh1, Seyyed Shahin Mousavi2 and Vahid Salari1,3*\n*Correspondence:\nvahidsalari@iut.ac.ir\n1Department of Physics, Isfahan\nUniversity of Technology, ,\n84156-83111 Isfahan, Iran\nFull list of author information is\navailable at the end of the article\nAbstract\nIn this paper we develop a compositional vector-based semantics of positive\ntransitive sentences in quantum natural language processing for a non-English\nlanguage, i.e. Persian, to compare the parametrised quantum circuits of two\nsynonymous sentences in two languages, English and Persian. By considering\ngrammar+meaning of a transitive sentence, we translate DisCoCat diagram via\nZX-calculus into quantum circuit form. Also we use a bigraph method to rewrite\nDisCoCat diagram and turn into quantum circuit in the semantic side.\nIntroduction\nNatural language processing (NLP) is a subgroup of linguistics and artiﬁcial intelli-\ngence used for language interactions between computers and human, e.g. program-\nming computers to analyze natural language data with large volumes. A computer\ncan understand the meanings and concepts of the texts in documents, recognises\nspeech, and generates natural language via NLP. In fact, NLP was proposed ﬁrst\nin 1950 by Alan Turing [1] i.e. now called the Turing test as a criterion of intelli-\ngence for automated interpretation and generation of natural language. Recently a\ngroup of researchers at OpenAI have developed Generative Pre-trained Transformer\n3 (GPT-3) language model [2], as the largest non-sparse language model with higher\nnumber of parameters and a higher level of accuracy versus previous models with\ncapacity of ten times larger than that of Microsoft’s Turing-NLG to date. On the\narXiv:2102.02204v1  [quant-ph]  2 Feb 2021\nAbbaszadeh et al.\nPage 2 of 20\nother side, some quantum approaches for NLP have been developed that may reach\nsome quantum advantages over classical counterparts in future [3, 4]. Protocols for\nquantum Natural Language Processing (QNLP) have two aspects: semantic and\nsyntax. Both aspects are performed by a mathematical framework. Compact closed\ncategories are used to provide semantics for quantum protocols [5]. The use of quan-\ntum maps for describing meaning in natural language was started by Bob Coecke\n[6]. Coecke has introduced diagrammatic language to speak about processes and\nhow they compose [7]. The diagrammatic language of non-commutative categori-\ncal quantum logic represents reduction diagrams for sentences, and allows one to\ncompare the grammatical structures of sentences in diﬀerent languages. Sadrzadeh\nhas used pregroups to provide an algebraic analysis of Persian sentences [8]. Pre-\ngroups are used to encode the grammar of languages. One can ﬁx a set of basic\ngrammatical roles and a partial ordering between them, then freely can generate a\npregroup of these types [6]. The category of ﬁnite dimensional vector spaces and\npregroups are monoidal categories. Models of the semantic of positive and negative\ntransitive sentences are given in ref. [6]. Moreover, Frobenius algebras are used to\nmodel the semantics of subject and object relative pronouns [9]. Brian Tyrrell [10]\nhas used vector space distributional compositional categorical models of meaning\nto compare the meaning of sentences in Irish and in English. Here, we use vector-\nbased models of semantic composition to model the semantics of positive transitive\nsentences in Persian. According to [3] the DisCoCat diagram is simpliﬁed to some\nother diagram and is turned into a quantum circuit, which can be compiled via noisy\nintermediate-scale (NISQ) devices. The grammatical quantum circuits are spanned\nby a set θ. The meaning of the words and hence whole sentence are encoded in\nthe created semantic space. Finally, we rewrite the diagram as a bipartite graph to\nturn a quantum circuit. ZX-calculus, like a translator, turns a linguistic diagram\ninto a quantum circuit. According to [11] we consider both grammar and meaning\nof a grammatical sentence in Persian and turn DisCoCat diagram into a quantum\ncircuit form.\nAbbaszadeh et al.\nPage 3 of 20\n1 Preliminaries\nIn this section, we provide some content, which will be used throughout this paper.\nSee the references [9] and [6] for more details.\nDeﬁnition 1.1\nA category C consists of:\n• a class obj(C), called the class of objects;\n• for every two objects A, B a class C(A, B) of morphisms; it is convenient to\nabbreviate f ∈C(A, B) by f : A →B;\n• for every two morphisms f ∈C(A, B) and g ∈C(B, C), a morphism g ◦f ∈\nC(A, C). These must satisfy the following properties, for all objects A, B, C, D\nand all morphisms f ∈C(A, B), g ∈C(B, C), h ∈C(C, D):\nh ◦(g ◦f) = (h ◦g) ◦f;\n• for every object A there is an identity morphism 1A ∈C(A, A); for f ∈C(A, B)\nwe have\n1B ◦f = f = f ◦1A\nDeﬁnition 1.2\nA monoidal category is a category C with the following properties:\n• a functor ⊗: C × C →C, called the tensor product and we have\n(A ⊗B) ⊗C = A ⊗(B ⊗C);\n• there is a unit object I such that\nI ⊗A = A = A ⊗I;\n• for each ordered pair morphisms f ∈C(A, C), g ∈C(B, D) we have f ⊗g :\nA ⊗B →C ⊗D such that\n(g1 ⊗g2) ◦(f1 ⊗f2) = (g1 ◦f1) ⊗(g2 ◦f2).\nMonoidal categories are used to encode semantic and syntax of sentences in dif-\nferent languages.\nAbbaszadeh et al.\nPage 4 of 20\nDeﬁnition 1.3\nA symmetric monoidal category is a monoidal category C such that\nthe tensor product is symmetric. This means that there is a natural isomorphism η\nsuch that for all objects A, B ∈C, A ⊗B\nηA,B / B ⊗A is an isomorphism.\nGraphical language is a high-level language for researching in quantum processes,\nwhich has applications in many areas such as QNLP and modelling quantum cir-\ncuits.\n1.1 Graphical language for monoidal category\nAccording to [6], morphisms are depicted by boxes, with input and output wires.\nFor example, the morphisms\n1A\nf\ng ◦f\nf ⊗g\nwhere f : A →B and g : B →C, are depicted as follows:\nA\nf\nA\nB\ng\nA\nB\nC\nf\nA\nB\ng\nB\nC\nf\nStates and eﬀects of an object A are deﬁned as follows, respectively from left to\nright:\nψ : I →A\nπ : A →I\nψ\nπ\nAbbaszadeh et al.\nPage 5 of 20\nDeﬁnition 1.4\nA compact closed category is a monoidal category where for each\nobject A there are objects Ar and Al, and morphisms\nηl : I →A ⊗Al,\nηr : I →Ar ⊗A,\nϵl : Al ⊗A →I,\nϵr : A ⊗Ar →I\nsuch that:\n• (1A ⊗ϵl) ◦(ηl ⊗1A) = 1A\n• (ϵr ⊗1A) ◦(1A ⊗ηr) = 1A\n• (ϵl ⊗1Al) ◦(1Al ⊗ηl) = 1Al\n• (1Ar ⊗ϵr) ◦(ηr ⊗1Ar) = 1Ar.\nThe above equations are called yanking equations. In the graphical language the\nη maps are depicted by caps, and ϵ maps are depicted by cups [6]. The yanking\nequation results in a straight wire . For example, the diagrams for ηl : I →A ⊗Al,\nϵl : Al ⊗A →I and (ϵl ⊗1Al) ◦(1Al ⊗ηl) = 1Al are as follows, respectively from\nleft to right:\n=\nA\nA\nAl\nAl\nAl\nDeﬁnition 1.5\nAs deﬁned in [6], a partially ordered non-commutative monoid P\nis called a pregroup, to which we refer as Preg. Each element p ∈P has both a\nleft adjoint pl ∈P and a right adjoint pr ∈P. A partially ordered monoid is a\nset (P, . , 1, ≤, (−)l, (−)r) with a partial order relation on P and a binary operation\n−· −: P × P →P that preserves the partial order relation. The multiplication has\nthe unit 1, that is p = 1.p = p.1. Explicitly we have the following axioms:\nϵl\np = pl.p ≤1,\nϵr\np = p.pr ≤1,\nηl\np = 1 ≤p.pl,\nηr\np = 1 ≤pr.p\nWe refer the above axioms as reductions.\n1.2 Preg and FVect as compact closed categories\nPreg is a compact closed category. Morphisms are reductions and the operation\n“ . ” is the monoidal tensor of the monoidal category. As mentioned in [6], the\nAbbaszadeh et al.\nPage 6 of 20\ncategory Preg can be used to encoding the grammatical structure of a sentence\nin a language. Objects and morphisms are grammatical types and grammatical\nreductions, respectively. The operation “ . ” is the juxtaposition of types. According\nto [9], let FV ect be the category of ﬁnite dimensional vector spaces over the ﬁeld of\nreals R. FV ect is a monoidal category, in which vector spaces, linear maps and the\ntensor product are as objects, morphisms and the monoidal tensor, respectively. In\nthis category the tensor product is commutative, i.e. V ⊗W ∼= W ⊗V , and hence\nV l ∼= V r ∼= V ∗, where V l, V r and V ∗are left adjoint, right adjoint and a dual space\nof V . We consider a ﬁxed base, so we have an inner-product. Consider a vector\nspace V with base {−→\nei }i. Since V is an inner product space with ﬁnite dimension,\nV ∗∼= V . Therefore V r ∼= V l ∼= V ,\nηl = ηr :R →V ⊗V\n1 7→\nX\ni\n−→\nei ⊗−→\nei\nand\nϵl = ϵr : V ⊗V →R\nX\nij\ncij−→\nvi ⊗−→\nwj 7→\nX\nij\ncij⟨−→\nvi | −→\nwj⟩.\nConsider the monoidal functor F : Preg →FV ect, which assigns the basic types\nto vector spaces as follows:\nF(n) = N\nF(s) = S\nF(1) = I,\nand also F(x ⊗y) = F(x) ⊗F(y). The compact structure is preserved by Monoidal\nfunctors; this means that\nF(xr) = F(xl) = F(x)∗\nfor more details see [9].\nAbbaszadeh et al.\nPage 7 of 20\n2 Positive transitive Sentence\nThe simple declarative Persian sentence with a transitive verb has the following\nstructure:\nsubject + object + objective sign + transitive verb. For example, the following is\nthe Persian sentence for ‘sara bought the book’.\nPersian: Sara ketab ra kharid.\nEnglish: Sara bought the book.\nIn this sentence, ‘Sara’ is the subject, ‘ketab’ is the direct object, ‘ra’ is the\nobjective sign and ‘kharid’ is the transitive verb in simple past tense, see [8].\n2.1 Vector Space Interpretation\nVector spaces and pregroups are used to assign meanings to words and grammatical\nstructure to sentences in a language. The reductions and types are interpreted\nas linear maps and vector spaces, obtained by a monoidal functor F from Preg\nto FV ect. In this paper we present one example from persian: positive transitive\nsentence, for which we ﬁx the following basic types,\nn: noun\ns: declarative statement\no: object\nAccording to [6] if the juxtaposition of the types of the words in a sentence reduces\nto the basic type s, the sentence is called grammatical. We use an arrow →for\n≤\nand drop the “ . ” between juxtaposed types. The example sentence ‘sara ketab ra\nkharid’, has the following type assignment by [8]:\nSara\nketab\nra\nkharid.\nn\nn\n(nro)\n(ornrs)\nWhich is grammatical because of the following reduction:\nnn(nro)(ornrs) →n11nrs →s\nReductions are depicted diagrammatically, that of the above is:\nAbbaszadeh et al.\nPage 8 of 20\nn\nn\nnr\no\nor\nnr s\n(1)\nA positive sentence with a transitive verb in Persian has the pregroup type\nnn(nro)(ornrs). The interpretation of a transitive verb is computed as follows:\nF(or ⊗nr ⊗s) = F(or) ⊗F(nr) ⊗F(s) = F(o)r ⊗F(n)r ⊗F(s) =\nF(o)∗⊗F(n)∗⊗F(s) = N ⊗N ⊗S\nSo the meaning vector of a Persian transitive verb is a vector in N ⊗N ⊗S. The\npregroup reduction of a transitive sentence is computed as follows:\nF((ϵr\nn ⊗1s) ◦(1n ⊗ϵr\nn ⊗ϵr\no ⊗1n ⊗1s)) =\n(F(ϵr\nn) ⊗F(1s)) ◦(F(1n) ⊗F(ϵr\nn) ⊗F(ϵr\no) ⊗F(1s) =\n(F(ϵn)∗⊗F(1s)) ◦(F(1n) ⊗F(ϵn)∗⊗F(ϵo)∗⊗F(1s) =\n(ϵN ⊗1S) ◦(1N ⊗ϵN ⊗ϵN ⊗1N ⊗1S)\nand depicted as:\nThe distributional meaning of ‘Sara ketab ra kharid’ is as follows:\nF((ϵr\nn ⊗1s) ◦(1n ⊗ϵr\nn ⊗ϵr\no ⊗1n ⊗1s))(−−→\nsara ⊗−−−→\nketab ⊗−→\nra ⊗−−−−→\nkharid)\nwhere −→\nra is the vector corresponding to the meaning of ‘ra’. We set\n−→\nra =\nX\ni\n−→\nei ⊗−→\nei ∈N ⊗N\nAbbaszadeh et al.\nPage 9 of 20\nand in this case we have\n−→\nra ≃ηN : R →N ⊗N.\nWe obtain diagrammatically:\nsubject\nobject\nverb\nWhich by the diagrammatic calculus of compact closed categories [12], is equal\nto:\nsubject\nobject\nverb\nConsider the vector Ψ in the tensor space which represents the type of verb:\nΨ =\nX\nijk\ncijk −→\nwi ⊗−→\nvj ⊗−→\nsk ∈N ⊗N ⊗S\nwhere for each i, −→\nwi is the meaning vector of object and −→\nvj is the meaning vector\nof subject. Then\n(ϵN ⊗1S) ◦(1N ⊗ϵN ⊗1N ⊗1S)(−→v ⊗−→\nw ⊗−→\nΨ) =\n(ϵN ⊗1S) ◦(1N ⊗ϵN ⊗1N ⊗1S)(−→v ⊗−→\nw ⊗(\nX\nijk\ncijk −→\nwi ⊗−→\nvj ⊗−→\nsk)) =\n(ϵN ⊗1S)(−→v ⊗⟨w, wi⟩⊗−→\nvj ⊗−→\nsk) =\nX\nijk\ncijk ⟨w, wi⟩⟨v, vj⟩−→\nsk.\nAbbaszadeh et al.\nPage 10 of 20\n2.2 Truth theoretic meaning and concrete instantiation\nAccording to [9] we let N to be the vector space spanned by a set of individuals\n{−→\nni} and S to be the one dimensional space spanned by the unit vector −→1 . The unit\nvector and the zero vector represent truth value 1 and truth value 0 respectively. A\ntransitive verb Ψ ∈N ⊗N ⊗S is represented as follows:\nΨ :=\nX\nji\n−→\nnj ⊗−→\nni ⊗(αji−→1 )\nwhere −→\nsub = P\ni −→\nni,\n−→\nobj = P\nj −→\nnj and αji’s are degrees of truth, i.e. −→\nni Ψ’s −→\nnj\nwith degree αji, for all i, j. For −→\nsub = P\nk −→\nnk and −→\nobj = P\nl −→\nnl, where k and l\nrange over the sets of basis vectors representing the respective common nouns, the\ntruth-theoretic meaning of a transitive sentence is computed as follows:\n−−−−−−−−−−−−−→\nsub obj ra verb = (ϵN ⊗1S) ◦(1N ⊗ϵN ⊗1N ⊗1S)(−→\nsub ⊗−→\nobj ⊗−−→\nverb)\n= (ϵN ⊗1S) ◦(1N ⊗ϵN ⊗1N ⊗1S)(\nX\nk\n−→\nnk ⊗\nX\nl\n−→\nnl ⊗(\nX\nji\n−→\nnj ⊗−→\nni ⊗αji−→1 ))\n=\nX\nkl\nαkl−→1 .\nFor concrete instantiation in the model of Grefenstette and Sadrzadeh [13] the\nvectors are obtained from corpora and the scalar weights for noun vectors are not\nnecessarily 1 or 0. For any word vector −−−→\nword = P cword\ni\n−→\nni, the scalar weight cword\ni\nis the number of times that the word has appeared in that context. Where −→\nni’s are\ncontext basis vectors. The meaning of the transitive sentence is:\n−−−−−−−−−−−−−→\nsub obj ra verb =\nX\njit\n⟨−→\nobj | −→\nnj⟩⟨−→\nsub | −→\nni⟩cjit−→\nst\nA transitive verb is represented as a two dimensional matrix. The corresponding\nvector of this matrix is −−→\nverb = P\nji cji(−→\nnj ⊗−→\nni). Note that the sum of the tensor\nproduct of the objects and subjects of the verb throughout a corpus represents the\nmeaning vector of the verb. So the meaning of the transitive sentence is:\nAbbaszadeh et al.\nPage 11 of 20\n−−−−−−−−−−−−−→\nsub obj ra verb =\nX\nji\n⟨−→\nobj | −→\nnj⟩⟨−→\nsub | −→\nni⟩cji(−→\nnj ⊗−→\nni)\n=\nX\nji\ncobj\nj\ncsub\ni\ncji(−→\nnj ⊗−→\nni).\nThe meaning vector is decomposed to point-wise multiplication of two vectors as\nfollows:\n(\nX\nji\ncobj\nj\ncsub\ni\n(−→\nnj ⊗−→\nni)) ⊙(\nX\nji\ncji(−→\nnj ⊗−→\nni))\n= (−→\nobj ⊗−→\nsub) ⊙−−→\nverb\nwhere ⊙is the point-wise multiplication.\n3 Diagrams rewriting and quantum circuits\nAs mentioned in the previous sections a sentence in a corpus is parsed according\nto its grammatical structure. According to [3] we simplify the DisCoCat diagram\nto some other diagram and turn into a quantum circuit, which can be compiled via\nNISQ devices. Two methods are presented for this purpose. The bigraph method\nand snake removal method. Both methods are done in the symmetric version of the\npregroup grammar. We consider the grammatical sentence from (1),\nSara\nketab\nra\nkharid\n(2)\nand use a bigraph method to turn the diagram (2) into a bipartite graph. Words at\nodd distance from the root word are transposed into eﬀects:\nAbbaszadeh et al.\nPage 12 of 20\nkharid\nketab\nra\nSara\n(3)\nTransposition turns states into eﬀects, see [12]. According to [3], we consider\nCNOT+U(3) of unitary qubit ansatze. Layers of CNOT gates between adjacent\nqubits with layers of single-qubits rotations in Z and X form unitary quantum cir-\ncuits. Let ˆP be the symmetric version of the pregroup grammar P. Consider the\nmonoidal functor from ˆP to fHilb, in which word states are mapped to the state\nansatze. State ansatze are obtained by applying the unitary ansatze to the pauli\nZ| 0⟩state. Word eﬀects are mapped to the eﬀect ansatze, in which eﬀect ansatze\nare obtained by transposing the state ansatze in the computational basis, and wire\ncrossing are mapped to swaps. Now consider the diagram (3). If each wire is mapped\nto a qubit, the circuit has about four CNOTs. In ZX-calculus [14], suppose single-\nqubits white and black dots are rotations in pauli Z and pauli X. A CNOT gate is\nBlack and white dots connected by a horizontal line:\nAbbaszadeh et al.\nPage 13 of 20\nketab\n7→\nθ0\nθ1\nsara\n:=\nsara\n7→\nθ1\nθ0\nra\n7→\nθ0\nθ2\nθ4\nθ6\nθ1\nθ3\nθ5\nθ7\n=\nθ1\nθ3\nθ5\nθ7\nθ0\nθ2\nθ4\nθ6\nOne can use the bigraph algorithm to form quantum circuits of the semantic side\nof the meaning. In the pregroup type of the sentence ‘Sara ketab ra kharid’ set\no = n. For atomic types n and s consider two qubits and one qubit respectively.\nThe number of qubits for each type t is the sum of the number of qubits associated\nto all atomic types in t. For example the transitive verb ‘kharid’ has ﬁve qubits.\nFor each word in the sentence we have a quantum circuit as follows:\nAbbaszadeh et al.\nPage 14 of 20\nThe quantum circuit of the whole sentence is as follows:\nThe reduction diagram of the sentence ‘sara bought the book’ in English is:\nn\nnr s nl\nn nl\nn\nSo the quantum circuit of the whole sentence is as follows:\nAbbaszadeh et al.\nPage 15 of 20\nThe two sentences ‘Sara Ketab ra kharid’ and ‘Sara bought the book’ have the\nsame meaning but are grammatically diﬀerent. We expect the above two circuits to\nhave the same output. According to [11] we present grammar+meaning as quantum\ncircuit for the above two sentences. Consider the states | ψns⟩and | ψno⟩correspond\nto the subject and the object, respectively. Also a transitive verb as a map ηtv that\ntakes | ψns⟩∈C2 and | ψno⟩∈C2 and produces | ψns.no.tv⟩∈C2k, diagrammatically:\nkharid\n=\nkharid\nSo | ψkharid⟩∈C2 ⊗C2 ⊗C2k. Because the quantum model relies on the tensor\nproduct, an exponential blow-up occurs for meaning spaces of words. In order to\navoid this obstacle in experiments decrease the dimension of the spaces in which\nmeanings of transitive verbs live. For the transitive verb, instead of state in the large\nspace | ψkharid⟩∈C2 ⊗C2 ⊗C2k consider state in a smaller space | ψ∗kharid∗⟩∈\nC2 ⊗C2, diagrammatically:\n7→\nkharid\n∗kharid∗\nThen copy each of the wires and bundle two of the wires together to make up the\nthick wire. Thus ‘kharid’ is obtained:\n∗kharid∗\nFor more details see [11]. Now inter Sara and Ketab into the picture:\nAbbaszadeh et al.\nPage 16 of 20\n∗kharid∗\nKetab\nSara\n=\n∗kharid∗\nKetab\nSara\nWe Pull some spiders out:\n∗kharid∗\nKetab\nSara\n(4)\nand by Using the Choi-Jamiolkowski correspondence we obtain:\n∗kharid∗\nKetab\nSara\n∗kharid∗\nKetab\nSara\n=\n(5)\nThe circuit (4) requires 4 qubits and has two CNOT-gates in parallel, but the\ncircuit (5) requires 3 qubits and has sequential CNOT-gates. Indeed, the use of\nthe Choi-Jamiolkowski correspondence has reduced the number of qubits, but has\nincreased the depth of the CNOT-gates. As mentioned in [11] ion trap hardware\nhas less qubits, but performs better for greater circuit depth. In ZX-calculus and\nvia Euler decomposition any one-qubit unitary gate is represented as follows:\nAbbaszadeh et al.\nPage 17 of 20\nβ\nα\nγ\nEach verb is represented by an unitary gate U and has diﬀerent values α, β and γ.\nSo we obtain:\nU\nKetab\nSara\nKetab\nSara\n=\nβ\nα\nγ\nBy considering the singular value decomposition for the verb we obtain:\nKetab\nSara\nP\nβ\nα\nγ\nβ′\nα′\nγ′\nAbbaszadeh et al.\nPage 18 of 20\nWhere the state P is the diagonal of the matrix. We represent all noun states by\ngates:\nα′ + γ\nαs\nβs\nαk\nβk\nα\nβ\nγ′\nαp\nβ′\nFor the sentence ‘sara bought the book’ we obtain the DisCoCat diagram as\nfollows:\nBought\nBook\nSara\nthat is equal to:\nBought\nBook\nSara\n(6)\nIndeed we ignore ‘the’ and ‘ra’ of positive transitive sentences in English and\nPersian respectively. Therefore according to [11] the parametrised quantum circuit\nof the diagram (6) is as follows:\nAbbaszadeh et al.\nPage 19 of 20\nα′ + γ\nαS\nβS\nαB\nβB\nα\nβ\nγ′\nαP\nβ′\n4 Conclusion and Future Works\nThis paper extended the compact categorical semantics to analyse meanings of\npositive transitive sentences in Persian. It is necessary to introduce linear maps to\nrepresent the meaning of negative transitive sentences and grammatically more com-\nplex sentences in Persian. In this work the two sentences ’Sara ketab ra kharid’ (in\nPersian) and ’Sara bought the book’ (in English) are instantiated as parametrised\nquantum circuits. The meaning of the two sentences are the same but the appearence\nof the obtained quantum circuits are diﬀerent. These circuits need to be compiled\ncorrectly, thus it is necessary to introduce a test measurement at the terminal of the\ncircuits to give almost similar results for the meaning of the synonymous sentences\nin diﬀerent languages. As a future prospect one may use the compiler t| ket⟩to this\naim, and run the circuits on the IBMQ and analyze the results.\nAuthors’ information\nmina.abbaszade@math.uk.ac.ir\nvahid.salari@ehu.eus\nAbbaszadeh et al.\nPage 20 of 20\nAuthor details\n1Department of Physics, Isfahan University of Technology, , 84156-83111 Isfahan, Iran.\n2Pure Mathematics\nDepartment, Shahid Bahonar University of Kerman, Kerman, Iran.\n3Department of Physical Chemistry, University\nof Basque Country UPV/EHU, Apdo. 644, 48080 Bilbao, Spain.\nReferences\n1. Turing, A.: Computing machinery and intelligence. Mind 236, 433–460 (1950)\n2. Brown, e.a. TB: Language models are few-shot learners. arXiv, 2005–14165 (2020)\n3. Meichanetzidis, K., Gogioso, S., Felice, G.D., Chiappori, N., Toumi, A., Coecke, B.: Quantum natural language\nprocessing on near-term quantum computers (2020). arXiv:2005.04147, 2020\n4. O’Riordan, L., Doyle, M., Baruﬀa, F., Kannan, V.: A hybrid classical-quantum workﬂow for natural language\nprocessing. Mach. Learn.: Sci. Technol. 2, 015011 (2020)\n5. Abramsky, S., Coecke, B.: A categorical semantics of quantum protocols. In: 19th Annual IEEE Symposium on\nLogic in Computer Science, pp. 415–425 (2004)\n6. Coecke, B., Sadrzadeh, M., Clark, S.: Mathematical foundations for a compositional model of meaning.\nLinguistic Analysis 36, 345–384 (2010)\n7. Coecke, B.: Quantum picturalism. Contemporary physics 51, 59–83 (2010)\n8. Sadrzadeh, M.: Pregroup analysis of persian sentences. In: C. Casadio and J. Lambek, Editors, Computational\nAlgebraic Approaches to Natural Language. Polimetrica, 2006 (2006)\n9. Sadrzadeh, M., Clark, S., Coecke, B.: The frobenius anatomy of word meaning i: subject and object relative\npronouns. Journal of Logic and Computation 23, 1293–1317 (2013). Issue 6\n10. Tyrrell, B.: Applying distributional compositional categorical models of meaning to language translation. In:\nWorkshop on Compositional Approaches for Physics, NLP, and Social Sciences (CAPNS) EPTCS 283, 28–49,\n2018, pp. 28–49 (2018)\n11. Coecke, B., Felice, G., Meichanetzidis, K., Toumi, A.: Foundations for near-term quantum natural language\nprocessing (2020). arXiv preprint arXiv:2012.03755\n12. Coecke, B., Kissinger, A.: Picturing Quantum Processes. A First Course in Quantum Theory and Diagrammatic\nReasoning. Cambridge University Press, Cambridge 2017 (2017)\n13. Grefenstette, E., Sadrzadeh, M.: Experimental support for a categorical compositional distributional model of\nmeaning. In: Proceedings of Conference on Empirical Methods in Natural Language Processing (EMNLP), pp.\n1394–1404 (2011)\n14. Coecke, B., Duncan, R.: Interacting quantum observables: categorical algebra and diagrammatics. IOP\nPublishing (13) (2011). p. 043016, doi:10.1088/1367-2630/13/4/043016\n",
  "categories": [
    "quant-ph",
    "cs.CL"
  ],
  "published": "2021-02-02",
  "updated": "2021-02-02"
}