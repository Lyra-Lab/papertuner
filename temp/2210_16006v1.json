{
  "id": "http://arxiv.org/abs/2210.16006v1",
  "title": "Development of a rule-based lemmatization algorithm through Finite State Machine for Uzbek language",
  "authors": [
    "Maksud Sharipov",
    "Ogabek Sobirov"
  ],
  "abstract": "Lemmatization is one of the core concepts in natural language processing,\nthus creating a lemmatization tool is an important task. This paper discusses\nthe construction of a lemmatization algorithm for the Uzbek language. The main\npurpose of the work is to remove affixes of words in the Uzbek language by\nmeans of the finite state machine and to identify a lemma (a word that can be\nfound in the dictionary) of the word. The process of removing affixes uses a\ndatabase of affixes and part of speech knowledge. This lemmatization consists\nof the general rules and a part of speech data of the Uzbek language, affixes,\nclassification of affixes, removing affixes on the basis of the finite state\nmachine for each class, as well as a definition of this word lemma.",
  "text": "Development of a rule-based lemmatization algorithm through \nFinite State Machine for Uzbek language \n \nMaksud Sharipov 1 and Og‘abek Sobirov1  \n \n1 Urgench State University, Department of Information Technologies, 14, Kh.Alimdjon str, Urgench city, \n220100, Uzbekistan \n \nAbstract \nLemmatization is one of the core concepts in natural language processing, thus creating a \nlemmatization tool is an important task. This paper discusses the construction of a lemmatization \nalgorithm for the Uzbek language. The main purpose of the work is to remove affixes of words in \nthe Uzbek language by means of the finite state machine and to identify a lemma (a word that can \nbe found in the dictionary) of the word. The process of removing affixes uses a database of affixes \nand part of speech knowledge. This lemmatization consists of the general rules and a part of speech \ndata of the Uzbek language, affixes, classification of affixes, removing affixes on the basis of the \nfinite state machine for each class, as well as a definition of this word lemma. \n \nKeywords  1 \nUzbek language, lemma, affix, lemmatization, part of speech, finite state machine  \n1. Introduction \nIn linguistics, a lemma is a “dictionary form” or a “canonical form” of words. More specifically, a \nlemma is the canonical form of a lexeme where it refers to the set of all the forms that have the same \nmeaning, and a lemma refers to the particular form that is chosen as a base form to represent the lexeme. \nLemmas have special significance in highly inflected and agglutinative languages, such as Uzbek [1]. \nUzbek is a low-resource agglutinative language [2], whose words are generated by adding affixes to the \nroot forms. Affixes: prefixes, suffixes and infixes to the stem of the given word or words [3]. \nLemmatization is an important step in many natural language processing (NLP) tasks, such as \ninformation retrieval, and information extraction [4]. Lemmatization is the process of determining the \nlemma for a given word, so different inflected forms of a word can be analyzed as a single item, and it \ncreates the set of lemmas of a lexical database. It is conceived as starting from text words found in a \ncorpus and leading to lemmas heading dictionary entries [1,4]. We present in this paper how to create \na lemmatization algorithm for the Uzbek language and some examples. Our lemmatization method \nshows good performance in Uzbek, and it is easily extensible to other agglutinative languages. \nStemming is the process of determining the unchanging stem of a given word (stemma), which does \nnot necessarily coincide with its morphological root [5]. But there are differences between them, let us \nwe will consider it with the following word, o‘qigan (read (past participle)) \n● o‘q/i/gan stemming shows: o‘q (arrow) \n● o‘q/i/gan lemmatization shows: o‘qimoq (to read), -moq means to \nThere has only little work been done in the field of Uzbek lemmatization, thus, in this paper, we propose \na lemmatization algorithm for the Uzbek language. \n \n                                                      \n1The International Conference and Workshop on Agglutinative Language Technologies as a challenge of Natural Language Processing \n(ALTNLP), June 6, 2022, Koper, Slovenia. \nEMAIL: maqsbek72@gmail.com (M. Sharipov); sobirovogabek0409@gmail.com (O. Sobirov) \nORCID: 0000-0002-2363-6533 (A. 1); 0000-0003-1770-8550 (A. 2) \n \n©️ 2022 Copyright for this paper by its authors. \nUse permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0).  \n \nCEUR Workshop Proceedings (CEUR-WS.org)  \n \n2. Related work \n \nValuable amount of work has been done to solve different stemming-related NLP problems, and \nwe can see both stemming and lemmatization for other languages. The lemmatization method has \nshown good potential in many diverse languages and was further developed on larger datasets of the \ntested languages, with no exception to Asian languages [4]. One of the works done on stemming that is \nreally close to Uzbek, is the Turkish one, where it has been proposed two lemmatization modules, a \nstatic (offline), and a dynamic (online) module. The static module is constructed once and new words \noriginating from new sentences crawled from any source can be added to the offline module by using \nthe online module. The online module has the ability to new relation types between the words and \nlemmas that can be allowed to apply a suitable illustration method to solve obscurity [6]. We can also \nsee these works in the Uzbek language in this field as well. It starts with an analysis of scientific research \nrelated to the creation of morphological analyzers belonging to the family of agglutinative languages. \nThe functionality of Uzbek morphological analyzers has also been studied [7]. Another paper, which \ndeals with affix stripping morphological analyzer is developed for the Uzbek language which is based \non the morphotactic rules of the language. This model focuses on reaching the stem of a word without \nusing any lexicon while making the morphological analysis [8].  \nApart from stemming-related works on low-resource Uzbek language, recent years have seen an \nincreasing trend in NLP works on Uzbek language, such as sentiment analysis [9], stopwords dataset \n[10], as well as cross-lingual word embeddings [11]. \nNormalization, namely, word lemmatization is a one of the main text preprocessing steps needed \nin many downstream NLP tasks. The lemmatization is a process for assigning a lemma for every word \nform [12]. It is the process of assembling the inflected parts of a word such that they can be recognized \nas a single element, called the word’s lemma or it’s vocabulary form. This process is the same as \nstemming but it adds meaning to particular words. In simple words, it connects text with alike meanings \nto a single word [13]. \n \n3. Methodology \nIn our approach, the methodology behind this process is carried out in two steps, from the moment \nwe are given the 'raw text' as follows: First, text normalization, raw text is divided into word tokens, \nthen these consisting only of punctuation and numbers are deleted. In texts, the total number of words \ncalled tokens [14]. Second, in order to establish the lemmatization algorithm, two databases have been \ndesigned and implemented: Respectively, we named databases as Words and Affixes. The aim of \ncreating those two databases is to use them when finding the lemma of words and removing affixes. In \nthis process, the removal of affixes is based on a finite state machine (FSM) technology. The FSM \nconsists of a set of states si and a set of transitions between pairs of states si, sj [15]. FSM is created \nbased on the rules of word structure in the Uzbek language and uses an affixes database when removing \naffixes. \n \n3.1. Word structure \nA word consists of morphemes, the morpheme is the smallest meaningful part of a word structure \n[16]. For example, kitob/lar/da/gina (only in books). Kitoblardagina is word, kitob, -lar, -da and -gina \nare morphemes. These parts are present in different words and they have different meanings. If these \nparts are divided again, their meaning will be lost. There are two types of morphemes: free morphemes \nand bound morphemes [Figure 1]. The free morpheme is the main part of the word meaning, and bound \nmorphemes are used in conjunction with this free morpheme. Accordingly, the free morpheme is also \ncalled a base (root), and the bound morphemes are also called affixes [16,17,18]. Therefore, as \nmentioned in the example above, kitob (book) is a free morpheme, -lar, -da and -gina are bound \nmorphemes. The base holds the meaning, and the affixes help to shape the meaning to the desired form. \n \n \nFigure 1: Morpheme structure \n \nThere are two types of bound morphemes: derivational and inflectional. Derivational affixes change \nthe word's meaning. Inflectional affixes change the form of the word. The free morpheme is the basis \nfor both word formation and form formation. For example, til/shunos (linguist) there are til (language) \nis base, -shunos is derivational affix and til/lar (languages) there are til (language) is base, -lar is the \ninflectional affix. In the Uzbek language, inflectional affixes are also divided into two types: lexical \nand grammatical. Affixes are used in Uzbek mostly as suffixes and are added after the base of the word. \nSometimes they are added to the base as a prefix as well [16,17,18]. \n \nTable 1 Word structure in Uzbek language \nWord \nMorphemes \n \nPrefix (consists \nderivational or \nlexical suffixes) \nBase \n(Root) \nDerivational \nsuffixes \nInflectional suffixes \nLexical suffix \nGrammatical suffix \npaxtakorlarga \n(to cotton growers) \n \npaxta \n(cotton) \nkor \nlar \nga \nserhosil (fertile) \nser \n(derivational affix) \nhosil \n(crop) \n \n \n \nnimpushti (pinker) \nnim \n(lexical affix) \npushti \n(pink) \n \n \n \n \nAs can be seen above in the Table 1, following examples can be shown regarding the formation of \nwords from lemmas: \n● \nLemma [base]: yurmoq (to walk), munosabat (attitude), tez (fast) \n● \nLemma [prefix+base]: be/foyda (useless), ham/kasb (colleague), no/umid (hopeless) \n● \nLemma [base+derivational]: yangi/lamoq (to renew), aylan/a (circle), ayb/dor (guilty) \n● \nLemma [base+lexical]: ko‘r/satmoq (to show), ko‘k/ish (blue-ish), ikki/nchi (the second) \n● \nLemma [base+derivational+lexical]: ikki/lan/moq (hesitation) \n \n3.2. Part of Speech and Affixes \nIn the second step of the algorithm uses a part of speech (POS) tag and its database [database name: \nWords] to perform its task. POS is divided into classes according to what a question of words is and \nhow they express a generalized meaning. In the Uzbek language, POS is divided into three classes [19] \nopen word classes, closed word classes, and intermediate words [Table 3]. The work begins by \nsearching for the token in the WORDS database. In the database, each POS tag is located in different \nforms, such as a lemma. Some POS words do not have an affix, like closed word classes and some \nintermediate words. Therefore, it is necessary to search for it first before attempting to remove the affix \nfrom the token content. If the token is not found in the database, the affixes in the token should be \nremoved one by one based on the word structure of the Uzbek language and searched in this database \nat each while. \n \n \nTable 2 POS tags in Uzbek language \nPART OF SPEECH \nEXAMPLE \nOpen word classes (lexical) \nFe’l (Verb) \nyugurmoq (to run), bormoq (to go) \nOlmosh (Pronoun) \nmen (I), biz (we) \nOt (Noun) \navtomobil (a car), olma (an apple) \nRavish (Adverb) \nrostdan ham (really), bugun (today) \nSifat (Adjective) \nbaxtli (happy), katta (big) \nSon (Numeral) \nbir (one), qirq besh (forty-five) \nClosed word classes (grammatical) \nBog‘lovchi (Conjuction) \nva (and), yoki (or) \nKo‘makchi (Auxiliary) \nuchun (for), bilan (with) \nYuklama (Particle) \nham (also), faqat (only) \nIntermediate words \nModal (Modal) \nafsuski (unfortunately), darhaqiqiat (actually) \nTaqlid (Imitation) \ncheep-cheep, buzz \nUndov (Interjection) \nooh! bah! \n \n \nAs mentioned above, affixes are used in Uzbek mainly as suffixes and are added after the base \nof the word. There are also prefixes that consist of derivational and lexical suffixes.  Affixes exist in \nopen word classes other than pronouns [Table 3]. But when a pronoun is used in place of others, it can \ntake their affixes. Closed word classes never get affix and do not replace open word ones. Intermediate \nwords also do not get affixes, but some may replace open word classes [2,16,20]. In the table below, \nwe have given the number of affixes that we have collected from the works of literature. \n \nTable 3 Affixes in Uzbek language \nBase (Root) \nDerivational suffixes \n[suffixes (allomorphs)] \nLexical suffixes \n[suffixes (allomorphs)] \nGrammatical suffixes \n[suffixes (allomorphs)] \nFe’l (Verb) \n26 (33) \n36 (64) \n35 (47) \nOt (Noun) \n90 (103) \n21 (26) \n14 (21) \nRavish (Adverb) \n18 (22) \n \n \nSifat (Adjective) \n58 (75) \n4 (5) \n \nSon (Numeral) \n \n13 (14) \n \n3.3. FSM for lemmatization \nFSM [Figure 2], which removes affixes for lemmatization, works in the following order. Since there \nare no grammatical suffixes in the lemma, we remove such verb and noun suffixes according to table-\n3 directly from the word. Typically, the algorithm removes a single affix when referring to FSM, \nhowever, in this state, the FSM removes all of these suffixes at once, not just one (n – removing multiple \naffixes). Let's look at an example of a noun: kitob/im/ning (of my book), there are kitob (book) lemma, \n-im and -ning are grammatical suffixes and they will be removed in one state. If this type of affix does \nnot exist in the word, goes directly to the previous lexical suffix removal [0 – empty transaction]. \n \n \nFigure 2. FSM schema \n4. Algorithm creation \nIn this section, the lemmatization algorithm is developed based on rules through FSM for the Uzbek \nlanguage [Figure 3]. The flowchart of the lemmatization algorithm is shown in Figure 4. If the raw text \nwas written without any spell mistakes and is in the modern Uzbek language, the algorithm works with \nhigh accuracy. \n \n \nFigure 3. Steps performed by the proposed lemmatization algorithm. \n \n \nFigure 4. Flowchart of Lemmatization Algorithm \n5. Conclusion and future work \nIn this paper, we presented a database: Words, that have been created based on word classes, and \nthe database of affixes: Affixes. Furthermore, the FSM was created to remove affixes. Based on this, \nthe lemmatization algorithm was developed for the Uzbek language. It is aimed to use in the NLP tasks \nof Uzbek. In the future, our aim is to increase the reliability of the algorithm by expanding the words \ndatabase.  \nIt is planned to carry out this work in a Uzbek corpus [21] which has more 80 000 words and word \nphrases. \nMoreover, we aimed to create a program for it as a python package then it will place in pypi.org, \nlike pip install UzbekLemmatizer and we also place its source code on the github.com platform. This \nis because, so far there is no such package for the Uzbek language in python packages, even algorithm \nis no. \n \n \n \n6. References \n[1] Mert CİVRİZ. DICTIONARY-BASED EFFECTIVE AND EFFICIENT TURKISH LEMMATIZER. \n2011. \n[2] Xojiyev A. O`zbek tili morfologiyasi, morfemikasi va so`z yasalishining nazariy masalalari. Toshkent: \nFan, 2010. \n[3] Abeyweera GH. The use of affixation in academic English: A lexical explanation on affixation, root \nand meaning. Journal of Social Sciences and Humanities Review 2020; 5: 179. \n[4] Akhmetov I, Pak A, Ualiyeva I, Gelbukh A. Highly Language-Independent Word Lemmatization \nUsing a Machine-Learning Classifier. Computación y Sistemas 2020; 24. \n[5] Bakayev I. DEVELOPMENT OF A STEMMING ALGORITHM BASED ON A LINGUISTIC \nAPPROACH FOR WORDS OF THE UZBEK LANGUAGE. International Conference on Scientific, \nEducational & Humanitarian Advancements 2021; 195–202. \n[6] Arslon E, Orhan U. Using Graphs in Construction of a Lemmatization Model for Turkish. 2 \nnd International Mediterranean Science and Engineering Congress (IMSEC 2017) 2017; \n[7] Bakaev I.I., Bakaeva R.I. Creation of a morphological analyzer based on finite-state techniques for the \nUzbek language. Journal of Physics: Conference Series 2021; 1791. \n[8] Sharipov M, Salaev U. Uzbek affix finite state machine for stemming. IX International Conference on \nComputer Processing of Turkic Languages “TurkLang 2021” 202; \n[9] Kuriyozov E, Matlatipov S. Building a new sentiment analysis dataset for Uzbek language and creating \nbaseline models. Multidisciplinary Digital Publishing Institute Proceedings, 2019, 37. \n[10] Madatov K, Bekchanov S, Vičič J. Automatic Detection of Stop Words for Texts in the Uzbek \nLanguage. 2022 https://www.preprints.org/manuscript/202204.0234/v1. \n[11] Kuriyozov E, Doval Y, Gomez-Rodriguez C. Cross-Lingual Word Embeddings for Turkic Languages. \nProceedings of The 12th Language Resources and Evaluation Conference, 2020, 4054–4062. \n[12] Akhmetov I, Krassovitsky A, Ualiyeva I, Gelbukh A, Mussabayev R. An Open-Source Lemmatizer \nfor Russian Language based on Tree Regression Models. Research in Computing Science 149(3) 2020; \n147–153. \n[13] Divya K, Siddhartha B, Niveditha N, Divya B. An Interpretation of Lemmatization and Stemming in \nNatural Language Processing. Journal of University of Shanghai for Science and Technology 2020; \n22: 350–357. \n[14] Oxford \nReference. \nURL: \nhttps://www.oxfordreference.com/view/10.1093/oi/authority. \n20110803110417743. \n[15] Ben-Ari M, Mondada F. Elements of Robotics. Cham: Springer International Publishing, 2018. \n[16] Sapayev Q. Xozirgi O`zbek tili (morfemika, so`z yasalishi va morfologiya). Toshkent: Nizomiy \nnomidagi TDPU, 2009. \n[17] Tojiyev Y. O`zbek tili morfemikasi. Toshkent: Jumg`uriyat o`quv-uslub idorasi, 1992. \n[18] Hamrayev M, Muhamedova D, Shodmonqulova D, Xulomova X, Yo`ldosheva Sh. Ona tili. Toshkent: \nIqtisod-moliya, 2007. \n[19] Hamroyeva O. Ona tili. Toshkent: Akademnashr, 2021. \n[20] Tojiyev Y, Nazarova N, Tojiyeva G. O`zbek tilidagi ergash morfemalarningsemantik-stilistik \nxususiyatlari (affiksial ma’nodoshlik). Toshkent, 2012. \n[21] Ziyouz.com Kutubxonasi. URL: https://n.ziyouz.com/kutubxona/category/10-o-zbek-tilining-izohli-\nlug-ati \n \n",
  "categories": [
    "cs.CL"
  ],
  "published": "2022-10-28",
  "updated": "2022-10-28"
}